<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HorseSF blog</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-05-21T08:21:10.146Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>HorseSF</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>N1文法</title>
    <link href="http://yoursite.com/2022/05/15/N1%E6%96%87%E6%B3%95/"/>
    <id>http://yoursite.com/2022/05/15/N1%E6%96%87%E6%B3%95/</id>
    <published>2022-05-15T13:32:54.000Z</published>
    <updated>2022-05-21T08:21:10.146Z</updated>
    
    <content type="html"><![CDATA[<p>总结N1文法</p><a id="more"></a><hr><h1 id="N1文法"><a href="#N1文法" class="headerlink" title="N1文法"></a>N1文法</h1><h3 id="第１週-1日目"><a href="#第１週-1日目" class="headerlink" title="第１週_1日目"></a>第１週_1日目</h3><ul><li>親になっ<strong>てこそ</strong></li></ul><blockquote><p>Vてこそ（＝Vてはじめて）</p><p>※過去のことには使えない</p><p>只有。。。</p></blockquote><blockquote><p>親になってこそ、親の苦労や気持ちがわかるものだ。</p><p>生活費を自分で稼いでこそ、自立していると言える。</p><p>その国で生活してこそ文化がわかるというものだ。</p><p>文章は理解されてこそ意味がある。</p></blockquote><ul><li>苦労<strong>こそあれ</strong></li></ul><blockquote><p>Nこそ</p><p>naでこそ</p><p>。。。虽然。。。</p></blockquote><blockquote><p>苦労こそあれ、介護の仕事はやりがいがある。</p><p>彼の日本語は小さい間違いこそあれ、ほとんど完璧だ。</p><p>程度の違いこそ、悪いことをしたのは皆同じだ。</p><p>ここは、不便でこそあれ、緑が多くていいとこどだ。</p></blockquote><ul><li>感謝<strong>こそすれ</strong></li></ul><blockquote><p>V<del>ます</del>こそすれ</p><p>Nこそすれ</p><p>※後文が「絶対〜ではない」ということの強調</p></blockquote><blockquote><p>あなたには感謝こそすれ、恨んでなどいません。</p><p>白髪はふつう増えこそすれ、減ることはない。</p></blockquote><ul><li>見た目<strong>こそ</strong>悪い<strong>が</strong></li></ul><blockquote><p>Nこそ〜が</p><p>Nこそ〜けれど</p><p>※強調</p><p>虽然。。。但是。。。</p></blockquote><blockquote><p>父の料理は見た目こそ悪いが、とてもいい味をしている。</p><p>このキノコは色と形こそきれいだが、毒があって食べることはできない。</p><p>彼は字こそ汚いが、いい文章を書く。</p></blockquote><h3 id="第１週-2日目"><a href="#第１週-2日目" class="headerlink" title="第１週_2日目"></a>第１週_2日目</h3><ul><li>そんなことする<strong>くらいなら</strong></li></ul><blockquote><p>Vるくらいなら</p><p>Vるぐらいなら</p><p>※とてもいやだという気持ち</p><p>Vるくらいなら〜ほうがましだ</p><p>Vるくらいなら〜ほうがいい</p><p>Vるくらいなら〜なさい</p></blockquote><blockquote><p>そんなことをするくらいなら、死んだほうがましだ。</p><p>友達を傷つけるくらいなら、自分が我慢したほうがいい。</p><p>愛する人が病気で苦しむのを見るくらいなら、自分が病気になったほうがいい。</p><p>転勤でそんな田舎に行かされるくらいなら、会社を辞めたほうがいい。</p></blockquote><ul><li>君<strong>ぐらいのものだ</strong></li></ul><blockquote><p>Nくらいのものだ</p><p>Nくらいなものだ</p></blockquote><blockquote><p>彼が仕事を辞めないように説得できるのは、君ぐらいのものだ。</p><p>君が受かるのは、このランクの大学ぐらいのものだ。</p><p>ぼくが買える家は、これぐらいのものだ。</p></blockquote><ul><li>できる<strong>ものとして</strong></li></ul><blockquote><p>V/A/na/Nものとして</p><p>na<del>だ</del>→である/な</p><p>N<del>だ</del>→である</p></blockquote><blockquote><p>中級漢字はできるものとして、上級漢字のクラスを取った。</p><p>田中さんはもう来ないものとして、始めましょう。</p><p>たぶん行けないと思うので、私はいないものとして話を進めてください。</p></blockquote><ul><li>10月に行う<strong>ものとする</strong></li></ul><blockquote><p>Vるものとする</p><p>※契約書などに多く出てくる表現</p></blockquote><blockquote><p>採用試験は、毎年10月に行うものとする。</p><p>契約の延長は、双方の同意によるものとする。</p><p>契約の期限が来た場合には、新たに契約書を交わすものとする。</p></blockquote><h3 id="第１週-３日目"><a href="#第１週-３日目" class="headerlink" title="第１週_３日目"></a>第１週_３日目</h3><ul><li>慌てる<strong>ことのないように</strong></li></ul><blockquote><p>Vることのないよう</p></blockquote><blockquote><p>災害が来ても慌てることのないよう、日頃kら準備しておこう。</p><p>今後、このような犯罪を関わることのないように注意してください。</p><p>道に迷うことのないように、前もって地図で場所を確かめておいた。</p></blockquote><ul><li>状況を知る<strong>ことなしに</strong></li></ul><blockquote><p>Vることなしに</p></blockquote><blockquote><p>今の状況を知ることなしに、未来を予測することはできない。</p><p>過去の事例を見ることなしに、解決方法は見えてこないだろう。</p><p>お互いが助け合うことなしに、人間は生きていけない。</p><p>彼女は今まで苦労することなしに生きてきた。</p></blockquote><ul><li>彼の<strong>ことがから</strong></li></ul><blockquote><p>Nのことだから</p><p> V/A/na/Nことだから</p><p>V/A/na/Nことだし</p></blockquote><blockquote><p>よくできる彼のことだから、合格は間違いないでしょう。</p><p>全員そろったことだから、時間前だけれど始めましょうか。</p><p>もう誰も来ないことだし、店を閉めよう。</p><p>明るい彼女のことだから、どこへ行ってもすぐ友達ができるだろう。</p></blockquote><ul><li>この話は聞かなかっ<strong>たことにしてください</strong></li></ul><blockquote><p>Vた/Aかった/na(だ)/N(だ)　(という)ことにする</p><p>Vた/Aかった/na(だ)/N(だ)　(という)ことになる</p><p>※事実とは反対に扱うという意味</p></blockquote><blockquote><p>この話は聞かなかったことにしてください。</p><p>彼は、大学を卒業したことになっているけれど、実際は中退したらしい。</p><p>兄が書いたレポートを、自分が書いたことにして提出した。</p></blockquote><h3 id="第１週-4日目"><a href="#第１週-4日目" class="headerlink" title="第１週_4日目"></a>第１週_4日目</h3><ul><li>問題だ<strong>とされる</strong></li></ul><blockquote><p>V/A/na/Nとされる</p></blockquote><blockquote><p>この国には、よい指導者がいないのが一番の問題とされている。</p><p>この物質は植物の成長を促進するとされる。</p><p>彼は社会人として必要とされている知識に欠ける。</p><p>この新薬は、効果はあるが、副作用が強いとされている。</p></blockquote><ul><li>学生時代のこと<strong>が</strong>思い出<strong>される</strong></li></ul><blockquote><p>Vられる</p><p>※意志と関係なく、ひとりでにその状態になるという意味</p></blockquote><blockquote><p>この曲を聴くと、学生時代のことが思い出される。</p><p>彼にひどいことを言ってしまったことが悔やまれる。</p></blockquote><ul><li>感心<strong>させられる</strong></li></ul><blockquote><p>Vさせられる</p></blockquote><blockquote><p>彼の仕事ぶりには感心させられる。</p><p>隣の家の騒音に悩まされている。</p><p>それは、死について真剣に考えさせられる映画だった。</p></blockquote><ul><li>私<strong>に言わせれば</strong></li></ul><blockquote><p>Nに言わせれば</p><p>Nから言わせれば</p></blockquote><blockquote><p>彼は天才と言われているが、私に言わせれば、単なる努力家だ。</p><p>もう私は６０歳を過ぎて、年を取りましたよ。いえ、うちの親に言わせれば、まだまだ若いそうですよ。</p><p>我々の世代の人間に言わせれば、彼の行動は普通ではない。</p></blockquote><h3 id="第１週-5日目"><a href="#第１週-5日目" class="headerlink" title="第１週_5日目"></a>第１週_5日目</h3><ul><li>忙しい<strong>とみえて</strong></li></ul><blockquote><p>V/A/na/Nとみえて</p><p>V/A/na/Nとみえる</p></blockquote><blockquote><p>田中さんは忙しいとみえて、このごろ電話もしてこない。</p><p>それを聞いて、彼はしばらく声を出さなかった。かなり驚いたとみえる。</p><p>彼女は苦労したとみえて、実際の年齢より老けて見える。</p></blockquote><ul><li>大きい地震が来る<strong>とみられる</strong></li></ul><blockquote><p>この地域では、今後も大きい地震が来ると見られている。</p><p>その会社の再建は難しいとみられる。</p><p>彼女の普段の成績から、合格は間違いないとみられている。</p></blockquote><ul><li>難しい<strong>とみると</strong></li></ul><blockquote><p>彼は問題がちょっと難しいとみると、自分で考えないで人に聞く。</p><p>彼は、店員が韓国人だとみると、必ず韓国語で話しかける。</p><p>彼女は、男の人にお金がないとみると、急にその人に興味がなくなるようだ。</p><p>彼は、女性が地方出身だとみるとすぐに声をかける。</p></blockquote><ul><li>歩いて行く<strong>とすれば</strong></li></ul><blockquote><p>V/A/na/Nとすれば</p><p>V/A/na/Nとすると</p></blockquote><blockquote><p>そこまで歩いて行くとすれば、30分くらいかかるだろう。</p><p>その話が本当だとすると、大変なことだ。</p><p>もし車を買い換えるとすれば、次はドイツの車がほしい。</p></blockquote><h3 id="第１週-6日目"><a href="#第１週-6日目" class="headerlink" title="第１週_ 6日目"></a>第１週_ 6日目</h3><ul><li>危ない<strong>ところを</strong></li></ul><blockquote><p>V/A/naな/Nの　ところを</p></blockquote><blockquote><p>交通事故で命が危ないところを、その医者に助けてもらった。</p><p>すぐにお礼の電話をしなければいけないところを今になってしまい、申し訳ありません。</p><p>お忙しいところをお集まりいただき、ありがとうございます。</p></blockquote><ul><li>２、３時間<strong>というところだ</strong></li></ul><blockquote><p>N というところだ</p><p>N といったところだ</p><p>※Nは数量が入ることが多い</p></blockquote><blockquote><p>勉強時間は２、３時間というところだ。</p><p>例の書類はできましたか。はい、あとはもう一度見直せばいいと言ったところです。</p><p>CDは月にどのくらい買うの。だいたい５枚というところだ。</p></blockquote><ul><li>何回読ん<strong>だところで</strong></li></ul><blockquote><p>Vたところで。。。ない</p><p>※悪い結果・状態が続くことが多い</p></blockquote><blockquote><p>何回読んだところで、意味は全くわからない。</p><p>そんな多額の借金は、家を売ったところで、到底返せない。</p><p>どんなに走ったところで、絶対に間に合わないだろう。</p><p>彼の借金は、休みなく毎日働いたところで、返せるような額ではない。</p></blockquote><ul><li>忘れよう<strong>としたところで</strong></li></ul><blockquote><p>V/A/na/N　としたところで</p><p>V/A/na/N　としたって</p></blockquote><blockquote><p>これは忘れようとしたところで、忘れられない出来事だ。</p><p>今から急いだとしたって間に合わないだろう。</p><p>あの頑固な父にタバコをやめさせようとしたって、無駄だよ。</p></blockquote><h3 id="第２週-１日目"><a href="#第２週-１日目" class="headerlink" title="第２週_１日目"></a>第２週_１日目</h3><ul><li>電話する<strong>なり</strong>メールする<strong>なり</strong></li></ul><blockquote><p>N1なりN2なり</p><p>V1るなり（V2るなり）する</p><p>なんなりと（＝なんでも）〜なりなんなり</p></blockquote><blockquote><p>電話なりメールなりで、彼に連絡してください。</p><p>もう使わないなら、人にあげるなり捨てるなりしたほうがいいと思う。</p><p>会社が倒産した。家のローンもあるし、朝も夜もバイトするなり（なんなり）して、なんとかこの危機を乗り越えなくてはいけない。</p><p>顔色が悪いですよう。座るなり横になるなり、楽にしてください。</p><p>最終電車に乗り遅れても、タクシーに乗るなり歩くなりして必ず家に帰ってきなさい。</p><p>雑用なりなんなり必要ならお申し付けください。</p></blockquote><ul><li>できない<strong>なら</strong>できない<strong>なりに</strong></li></ul><blockquote><p>（Vるなら）Vる　なりに/なりのN</p><p>（Aいなら）Aい　なりに/なりのN</p><p>（naなら）na　なりに/なりのN</p><p>（Nなら）N　なりに/なりのN</p></blockquote><blockquote><p>できないならできないなりに、無理をしないで少しずつやりましょう。</p><p>貧しいなら貧しいなりの生活をしなければならない。</p><p>結婚式に出席するなら、それなりの服装をするべきだ。</p><p>あなたが会社を辞めた理由は私なりに理解しています。</p><p>私は素人だが、この詩を自分なりに解釈してみた。</p><p>高得点を狙うならそれなりの準備が必要だ。</p></blockquote><ul><li>会う<strong>なり</strong></li></ul><blockquote><p>Vるなり</p></blockquote><blockquote><p>田中さんは私に会うなり泣き出した。</p><p>部長は電話を切るなり、部屋を出て行った。</p><p>彼ったら、家に帰るなり、パソコンの前に座るんだから。</p></blockquote><h3 id="第２週-２日目"><a href="#第２週-２日目" class="headerlink" title="第２週_２日目"></a>第２週_２日目</h3><ul><li>先生<strong>であれ</strong>、学生<strong>であれ</strong></li></ul><blockquote><p>N/naであれ</p></blockquote><blockquote><p>先生であれ学生であれ、この規則には従わなければならない。</p><p>彼が誰であれ、特別扱いするのはおかしい。</p><p>どの大学であれ、進学先が決まってほっとした。</p></blockquote><ul><li>雨が降ろ<strong>うが</strong>雪が降ろ<strong>うが</strong></li></ul><blockquote><p>aうとbうと</p><p>aうがbうが</p></blockquote><blockquote><p>雨が降ろうと雪が降ろうと明日の集まりには必ず行くよ。</p><p>私は肉だろうが魚だろうが、なんでも食べます。</p><p>新品であろうと、中古であろうと、そんな型の古いパソコンは買うべきではないと思う。</p><p>明日、時間があろうとなかろうと、連絡だけは入れてください。</p><p>彼は、朝だろうが夜中だろうがかまわず電話をかけてくる。</p><p>たとえ雨であろうと雪であろうと、明日の試合は予定通り行います。</p></blockquote><ul><li><strong>どんなに</strong>高かろ<strong>うが</strong></li></ul><blockquote><p>Vよう　が/と（も）</p><p>Aかろう　が/と（も）</p><p>na/Nだろう　が/と（も）</p><p>na/Nであろう　が/と（も）</p></blockquote><blockquote><p>必要だから、どんなに高かろうがそれを買わなくてはいけない。</p><p>あなたがどんなに謝ろうとも、今回は許さない。</p><p>あなたが何歳であろうが関係ない。仕事ができればいい。</p><p>私が何をしようが勝手だ。あなたに言う必要はない。</p><p>この部屋でどんなに騒ごうとも、外からは何も聞こえません。</p><p>何をしようと君の自由だが、他人に迷惑をかけることは許されない。</p></blockquote><h3 id="第２週-３日目"><a href="#第２週-３日目" class="headerlink" title="第２週_３日目"></a>第２週_３日目</h3><ul><li>うれしい<strong>というか</strong>、残念<strong>というか</strong></li></ul><blockquote><p>aというかbというか</p></blockquote><blockquote><p>私は合格したが、親友は不合格だった。うれしいというか、残念というか、複雑な気持ちだ。</p><p>そんなことをするとは、無茶というか、無知というか、彼のすることは理解できない。</p><p>それは、面白いというか、珍しいというか、とにかく変わったものだ。</p></blockquote><ul><li>降ろ<strong>うと</strong>降る<strong>まいと</strong></li></ul><blockquote><p>VようとVるまいと</p><p>VようがVるまいが</p></blockquote><blockquote><p>雨が降ろうと降るまいと試合は行われます。</p><p>私がいようがいまいが関係なく、彼らは喧嘩を始めた。</p></blockquote><ul><li>行こ<strong>うか</strong>行く<strong>まいか</strong></li></ul><blockquote><p>VようかVるまいか</p></blockquote><blockquote><p>台風のような雨だ。予定通り美術館に行こうか、行くまいか。</p><p>彼と結婚しようかするまいか悩むくらいなら、辞めたほうがいい。</p><p>あなたが反対しようかするまいか私は一人で行くつもりです。</p><p>大学院へ行こうか行くまいか悩んだ末、いい仕事が見つかったので就職することにした。</p></blockquote><ul><li>来る<strong>にせよ</strong>来ない<strong>にせよ</strong></li></ul><blockquote><p>aにせよbにせよ</p><p>aにしろbにしろ</p></blockquote><blockquote><p>来るにせよ来ないにせよ、必ず連絡を入れてください。</p><p>熱が下がったにせよ、しばらく安静が必要です。</p><p>事故で車は前のほうがめちゃくちゃになったが、何にしろ、誰もけがをしなくてよかった。</p><p>来週の会合に来るにしろ来ないにしろ、必ず資料に目を通してください。</p></blockquote><h3 id="第２週-4日目"><a href="#第２週-4日目" class="headerlink" title="第２週_4日目"></a>第２週_4日目</h3><ul><li>雑誌<strong>だの</strong>DVD<strong>だの</strong></li></ul><blockquote><p>aだのbだの</p><p>V/Aだの</p><p>na/naだった　だの</p><p>N/Nだった　だの</p></blockquote><blockquote><p>僕の毎月の小遣いは、雑誌だのDVDだので消えていく。</p><p>彼は部屋が狭いだの、食事がまずいだのといつも文句を言っている。</p><p>彼は、風邪を引いただの、頭が痛いだのと言って、よく授業を休む。</p><p>彼は、ガムだのあめだの何かしら口に入れている。</p><p>姉がデザインが古いだの色が気に入らないだのといってくれたバッグをずっと使っている。</p></blockquote><ul><li>デザイン<strong>といい</strong>、色<strong>といい</strong></li></ul><blockquote><p>N1といいN2といい</p></blockquote><blockquote><p>デザインといい、色といい、すごく気に入った靴があったんだけれど、サイズがなかった。</p><p>運動といい勉強といい、僕は何をやってもダメだ。</p><p>彼女はまだ若いけれど、経験といい能力といい申し分のない女性だ。</p><p>彼は学生の成績といい容姿といいパッとしないから女の子に全然もてない。</p></blockquote><ul><li>子ども<strong>が</strong>子ども<strong>なら</strong>、親<strong>も</strong>親<strong>だ</strong></li></ul><blockquote><p>N1がN1なら、N2もN2だ</p><p>N1もN1なら、N2もN2だ</p></blockquote><blockquote><p>子どもが子どもなら、親も親だ。</p><p>あのレストランは、味も味なら、サービスもサービスだ。</p><p>こんなつまらない商品を、売るほうも売るほうなら買うほうも買うほうだ。</p><p>あの人、田中さんのお母さんだよね、派手だね。娘が娘なら母親も母親だね。</p></blockquote><ul><li>子ども<strong>と言わず</strong>、大人<strong>と言わず</strong></li></ul><blockquote><p>N1といわずN2といわず</p></blockquote><blockquote><p>日本人は、子どもといわず、大人といわず、マンガをよく読む。</p><p>私は、牛肉といわず、豚肉といわず、肉は食べません。</p><p>最近の若者は、食事中といわず、テレビを見ている間といわず、いつでも携帯電話を手にしている。</p><p>猫に顔といわず手といわず引っかかれてしまった。</p></blockquote><h3 id="第２週-5日目"><a href="#第２週-5日目" class="headerlink" title="第２週_5日目"></a>第２週_5日目</h3><ul><li>こんなに雪が降っ<strong>ては</strong></li></ul><blockquote><p>Vては</p><p>Aくては</p><p>N/naでは</p></blockquote><blockquote><p>こんなに雪が降っては、どこにも出かけられない。</p><p>今日は弟の誕生日だが、肝心の本人が病気ではパーティーは延期するしかない。</p><p>遅刻したと言っても、電車の事故では仕方がない。</p><p>この作文、ひどいね。間違いがこんなに多くては少しぐらい直してもよくならないよ。</p></blockquote><ul><li>鏡を見<strong>ては</strong></li></ul><blockquote><p>V1てはV2</p></blockquote><blockquote><p>彼女ニキビに悩んでいて、鏡を見てはため息をついている。</p><p>子どものころ、弟とけんかしては、母に叱られたものだ。</p><p>若いことは、お酒を飲んでは踊ったものだ。</p></blockquote><ul><li>食べ<strong>ては</strong>寝て、食べ<strong>ては</strong>寝て</li></ul><blockquote><p>V1てはV2て</p><p>V1てはV2<del>ます</del></p></blockquote><blockquote><p>食べては寝て、食べては寝てという生活を続けていたら、この半年で１０キロも太ってしまった。</p><p>久しぶりに山登りをした。歩いては休み、していたので、頂上までたどりつくのにずいぶん長い時間かかった。</p><p>今朝から雪が降ってはやみ、降ってはやみを繰り返している。</p><p>学んだことを覚えては忘れ、覚えては忘れを繰り返している。</p></blockquote><ul><li>行きつ戻りつ</li></ul><blockquote><p>V1<del>ます</del>つV2<del>ます</del>つ</p><p>※V1とV2は反対の意味</p></blockquote><blockquote><p>彼は花束を持って、彼女の家の前を行きつ戻りつした。</p><p>昨日のマラソンでは、２人の選手が最後まで抜きつ抜かれつトップ争いをしていた。</p><p>彼と私は、学生時代、抜きつ抜かれつ成績を争ったものだ。</p><p>バーゲン会場は、押しつ押されつの大混雑で息苦しくなるほどだった。</p></blockquote><h3 id="第２週-6日目"><a href="#第２週-6日目" class="headerlink" title="第２週_6日目"></a>第２週_6日目</h3><ul><li>いい<strong>とも</strong>悪い<strong>とも</strong>言えない</li></ul><blockquote><p>aとbとも</p><p>Nとも</p><p>V/A/na/Nとも</p><p>※判定ができない。結果が出ない。</p></blockquote><blockquote><p>最近のゲームは、子どもにいいとも悪いとも言えない。</p><p>これは本物とも偽物とも判断ができない。</p><p>彼はおとなしいとも消極的だとも言えるが、とにかく口数が少ない。</p></blockquote><ul><li>なかっ<strong>たら</strong>なかっ<strong>たで</strong></li></ul><blockquote><p>VたらVたで</p><p>AかったらAかったで</p><p>AかったらAいで</p><p>naならnaで</p><p>NならNで</p><p>※否定形も使う</p></blockquote><blockquote><p>庭があったらあったで、草むしりが大変だ。</p><p>便箋がなかったらないで、コピー用紙でもかまいません。</p><p>ペットはいたらいたで大変だけれど、ペットのいない生活は考えられない。</p><p>いやならいやで、はっきり言ってください。</p><p>ピザ屋のチラシ、どこにある？捨てたら捨てたでいいのだけど。</p></blockquote><ul><li>喜んでいい<strong>のやら</strong>悲しんでいい<strong>のやら</strong></li></ul><blockquote><p>aのやらbのやら</p><p>V/Aのやら</p><p>naなのやら</p><p>※aとbは反対の意味。主観的で会話的な文に使う。</p></blockquote><blockquote><p>喜んでいいのやら悲しんでいいのやら、最近仕事の依頼が多く、趣味の時間がまったくとれない。</p><p>仕事がないので毎日友達と遊んでいいる。暇なのやら忙しいのやら。</p></blockquote><ul><li><strong>いつまで</strong>続く<strong>のやら</strong></li></ul><blockquote><p>V/a/Aい/naな　のやら/ものやら/ことやら</p></blockquote><blockquote><p>この不景気はいつまで続くのやら。</p><p>言葉も話せないのに、来年１年間オーストラリアに行くことにした。どうなることやら。</p><p>奥さんを病気で亡くした彼に、どう声をかけたらいいものやら。</p><p>会社が倒産しそうだ。どうなることやら。</p><p>この仕事は、いつになったら終わることやら見当もつかない。</p></blockquote><p>123</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;总结N1文法&lt;/p&gt;</summary>
    
    
    
    
    <category term="日本語" scheme="http://yoursite.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>G検定</title>
    <link href="http://yoursite.com/2022/02/23/G%E6%A4%9C%E5%AE%9A/"/>
    <id>http://yoursite.com/2022/02/23/G%E6%A4%9C%E5%AE%9A/</id>
    <published>2022-02-23T12:39:15.000Z</published>
    <updated>2022-03-02T15:21:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>G検定メモ</p><a id="more"></a><hr><h5 id="ディープニューラルネットワーク（DNN）の計算規則"><a href="#ディープニューラルネットワーク（DNN）の計算規則" class="headerlink" title="ディープニューラルネットワーク（DNN）の計算規則"></a>ディープニューラルネットワーク（DNN）の計算規則</h5><blockquote><p>ディープニューラルネットワーク（DNN）が予測を行う際の計算規則について考える。まず,データが入力層へと入力される。その後,次の層との間のコネクション（結合）に与えられた（重み）を乗じたものの総和を取り,（バイアス）を足す。その後,（活性化関数）による変換を加えた数値が,次の層のノードに引き渡される。</p></blockquote><blockquote><p>ディープニューラルネットワークの構成要素は</p></blockquote><blockquote><ul><li><strong>ノード（ユニット）</strong> と<strong>コネクション（結合・エッジ）</strong>,<strong>バイアス</strong>である。</li></ul></blockquote><blockquote><ul><li>ノード：入力,中間（隠れ）,出力層に分類され,中間層のノードには活性化関数が搭載されている。</li></ul></blockquote><blockquote><ul><li>コネクション：各ノードを接続する役目を担っており,各コネクションには重みが付与されている。</li></ul></blockquote><blockquote><ul><li>バイアス：各層の出力結果に偏りを持たせるための調整用パラメータである。</li></ul></blockquote><h5 id="勾配降下法"><a href="#勾配降下法" class="headerlink" title="勾配降下法"></a>勾配降下法</h5><blockquote><p>ディープラーニングのモデルを勾配降下法によって学習させたとき, <strong>訓練誤差</strong> が <strong>最小化</strong> されるようにパラメータが更新される。</p></blockquote><blockquote><p>しかし, <strong>訓練誤差</strong> では未知のデータに対する性能を評価できない。</p></blockquote><blockquote><p>データの母集団に対する誤差の期待値は <strong>汎化誤差</strong> と呼ばれ, <strong>汎化誤差</strong> を <strong>最小化</strong> するようなパラメータを得ることが理想である。</p></blockquote><h5 id="ディープラーニング手法"><a href="#ディープラーニング手法" class="headerlink" title="ディープラーニング手法"></a>ディープラーニング手法</h5><blockquote><p>ディープラーニングでは,得られたデータの中から <strong>サンプリング</strong> した一部のデータのみを学習に利用するという手法が用いられる。また,この工程は <strong>イテレーション</strong> という単位で繰り返され,そのたびにサンプリングは新たに行われる。このような手法は <strong>確率的勾配降下法</strong> と呼ばれ。</p></blockquote><blockquote><ul><li><strong>逐次学習</strong> ：1つのサンプルを利用する</li></ul></blockquote><blockquote><ul><li><strong>ミニバッチ学習</strong> ：一定数のサンプルを利用する</li></ul></blockquote><blockquote><ul><li><strong>バッチ学習</strong> ：データすべてを利用する</li></ul></blockquote><blockquote><p><strong>ミニバッチ学習</strong> は, <strong>逐次学習</strong> よりも正しい解に収束しやすい傾向にある。</p></blockquote><h5 id="CNNとは"><a href="#CNNとは" class="headerlink" title="CNNとは"></a>CNNとは</h5><blockquote><p>画像認識などに用いられる CNN（Convolutional Neural Networks）は,歴史的には動物の視神経系をヒントに研究されてきた。</p></blockquote><blockquote><p>CNNは <strong>順伝播型ニューラルネットワーク</strong> の一種であり。</p></blockquote><blockquote><ul><li><strong>畳み込み層</strong>：<strong>単純型細胞群</strong>に対応し、入力画像の <strong>各位置と結合して積和計算</strong> や <strong>活性化関数</strong> による変換などを行う。データの特徴を <strong>異なる特徴マップ</strong> として表現する。</li></ul></blockquote><blockquote><ul><li><strong>プーリング層</strong>：<strong>複雑型細胞群</strong>に対応し、 <strong>平均値</strong> や <strong>最大値</strong> などを用いて入力データをサブサンプリングする。畳み込み層で得た特徴の位置をぼかすことで,特徴の出ている <strong>位置</strong> が少々ずれていても許容できるようにする。</li></ul></blockquote><blockquote><p>この,特徴量の抽出と特徴出現位置のぼかしを繰り返すことで,変形などにも強い特徴表現ができる。</p></blockquote><blockquote><p>CNNの特性上, <strong>入力層に近い中間層</strong> は <strong>全体的な特徴</strong> を捉え, <strong>出力層に近い中間層</strong> は <strong>個別の特徴</strong> を捉える。</p></blockquote><h5 id="プーリング層の役割"><a href="#プーリング層の役割" class="headerlink" title="プーリング層の役割"></a>プーリング層の役割</h5><blockquote><p>プーリング層ではあるピクセルの周囲のセルを一つの値に集約する処理を行う。これにより,ピクセルのずれに頑健なモデルとなる。画像を鮮明にする操作は行わない。</p></blockquote><h5 id="ディープラーニングの学習時間の解決手法"><a href="#ディープラーニングの学習時間の解決手法" class="headerlink" title="ディープラーニングの学習時間の解決手法"></a>ディープラーニングの学習時間の解決手法</h5><blockquote><p><strong>出力層の再学習</strong> を行うことにある。</p></blockquote><blockquote><ul><li><strong>転移学習</strong>：学習済みのモデルの重みを使用して別のモデルで再度学習させることである。</li></ul></blockquote><blockquote><ul><li><strong>ファインチューニング</strong>：学習済みのモデルの最後の層のみを新しいタスクに適応するように学習することである。</li></ul></blockquote><blockquote><p>CNN の <strong>入力層に近い中間層</strong> ではタスクごとに比較的大きな差が生まれない汎用的な特徴が学習されるため,ファインチューニング手法を用いることができる。</p></blockquote><h5 id="RNNとは"><a href="#RNNとは" class="headerlink" title="RNNとは"></a>RNNとは</h5><blockquote><p>RNN（Recurrent Neural Networks）は内部に <strong>再帰構造</strong> を持つニューラルネットワークの総称であり,この構造は <strong>系列データ</strong> を扱うために開発された。 <strong>情報を一時的に記憶させること</strong> ができるようになったためである。</p></blockquote><blockquote><p>近年は <strong>自然言語処理</strong> だけでなく, <strong>音声処理</strong> にも利用されるようになってきている。</p></blockquote><blockquote><p>2014 年には,CNN の最終畳み込み層の結果をRNN へ接続することで, <strong>画像キャプション生成</strong> なども可能になった。</p></blockquote><h5 id="LSTMとは"><a href="#LSTMとは" class="headerlink" title="LSTMとは"></a>LSTMとは</h5><blockquote><p>LSTM（Long Short-Term Memory）はRNNの一種である。</p><p>内部に <strong>ゲート構造</strong> を設けることにより,プレーンなRNNの抱える <strong>長い系列を遡るにつれて学習が困難になる</strong> という問題を解決する方法として提案されている。</p></blockquote><blockquote><p>LSTM を簡略化した手法として <strong>GRU</strong> がある。</p></blockquote><blockquote><p>RNNの勾配消失問題を解決する手法として提案された。</p></blockquote><h5 id="Microsoft-社-音声認識-Cortana"><a href="#Microsoft-社-音声認識-Cortana" class="headerlink" title="Microsoft 社 音声認識 Cortana"></a>Microsoft 社 音声認識 Cortana</h5><blockquote><p>Microsoft 社は <strong>CNN</strong> と <strong>LSTM</strong> を組み合わせることにより高精度の音声認識を実現した。</p></blockquote><blockquote><p>音声データの波形を画像と考えれば,CNNが音声認識に利用できることは理解できるだろう。</p></blockquote><blockquote><p>音声データは時系列データであることから,RNNの一種であるLSTMとの親和性は高い。</p></blockquote><blockquote><p>現在,音声認識には,音響モデルと言語モデルで異なるアルゴリズムを採用,併用するのが一般的だが,最近では（LSTM）のみで音声認識を行う研究も進められている。</p></blockquote><h5 id="パラメータ最適化アルゴリズム"><a href="#パラメータ最適化アルゴリズム" class="headerlink" title="パラメータ最適化アルゴリズム"></a>パラメータ最適化アルゴリズム</h5><blockquote><ul><li><strong>最急降下法</strong>：パラメータで損失関数を微分することで損失を降下(小さく)する方向を逐次的に探してその方向にパラメータを調整させていく方法。</li></ul></blockquote><blockquote><ul><li><strong>SGD（確率的勾配降下法）</strong>：最急降下法とSGDの違いは、パラメータの1回の更新に全データではなく、ランダムにピックアップした1つのデータを使うということだけ。</li></ul></blockquote><blockquote><ul><li><strong>ミニバッチ学習SGD</strong>：1回の更新で一定数のデータを使い学習する。</li></ul></blockquote><blockquote><ul><li><strong>モーメンタム（Momentum）</strong>：移動平均。</li></ul></blockquote><blockquote><ul><li><strong>RMSProp</strong>：Momentumと同じくSGDの振動を抑えるという目的で作られたものです。ただこちらは学習率を調整 している。</li></ul></blockquote><blockquote><ul><li><strong>Adam</strong>：移動平均で振動を抑制するモーメンタム と 学習率を調整して振動を抑制するRMSProp を組み合わせている。</li></ul></blockquote><blockquote><p>パラメータ更新を行う際に, <strong>逐次処理（オンライン学習）</strong> と <strong>バッチ処理</strong> と <strong>ミニバッチ処理</strong> が存在する。</p></blockquote><h5 id="勾配消失"><a href="#勾配消失" class="headerlink" title="勾配消失"></a>勾配消失</h5><blockquote><p>勾配消失は極端に <strong>層の多い</strong> ニューラルネットワークで発生する問題である。</p></blockquote><blockquote><p>勾配消失はニューラルネットワークの <strong>重み更新</strong> に影響を与える。このため,学習が停止したり,速度が著しく低下する。</p></blockquote><blockquote><p>ReLUや 2015 年に提案された バッチ正規化 はこの解決策の例である。しかし,1,000 層以上のような極端に層の多いニューラルネットワークにおいてもこの問題が解決されるのは, ResNet が登場してからだった。</p></blockquote><h5 id="データ拡張"><a href="#データ拡張" class="headerlink" title="データ拡張"></a>データ拡張</h5><blockquote><p><strong>データ拡張</strong> ：水増しとも呼ばれるテクニックである。</p></blockquote><blockquote><p>訓練データとして使うデータの前処理として, <strong>きれいな画像を汚し,ロバスト性を高める</strong> 水増しを行うこともできる。</p></blockquote><blockquote><p>水増しする訓練データの加工は、加工前後で <strong>認識結果が変わらない程度</strong> にとどめなければならない。</p></blockquote><blockquote><p><strong>アフィン変換</strong> を行う。</p></blockquote><h5 id="バッチ正規化の利点"><a href="#バッチ正規化の利点" class="headerlink" title="バッチ正規化の利点"></a>バッチ正規化の利点</h5><blockquote><p>バッチ正規化：主に <strong>標準化</strong> と <strong>アフィン変換</strong> から構成されています。これは入力データの分布を0平均1分散の <strong>ガウス分布</strong> に変換し、 <strong>アフィン変換</strong> によって適切な平均と分散を求めること。</p></blockquote><blockquote><ul><li>学習の進行速度を速く</li></ul></blockquote><blockquote><ul><li>初期値への依存が少ない</li></ul></blockquote><blockquote><ul><li>過学習を抑制</li></ul></blockquote><h5 id="GANとは"><a href="#GANとは" class="headerlink" title="GANとは"></a>GANとは</h5><blockquote><p><strong>生成ネットワーク</strong> と <strong>識別ネットワーク</strong> の二つを競い合わせる深層生成モデルの一種である。</p></blockquote><blockquote><p><strong>ジェネレータ（Generator）</strong> と <strong>ディスクリミネータ</strong> で構成されており。</p></blockquote><blockquote><p>VAEはKLダイバージェンス,GANはJSダイバージェンスを用いている。</p></blockquote><blockquote><p>収束性,モードコラプス,勾配消失などの問題点がある。モードコラプスとは生成器が似た出力しか出さないようになることである。</p></blockquote><blockquote><p>ディープラーニングの画像認識に関する研究分野において,2014 年に （イアン=グッドフェロー） によって提唱された画像を生成する手法,生成敵対ネットワーク,通称 （GAN） は衝撃を持って迎えられた。</p></blockquote><h5 id="ILSVRC"><a href="#ILSVRC" class="headerlink" title="ILSVRC"></a>ILSVRC</h5><blockquote><p>2012年</p><blockquote><p>トロント大学の Hinton 率いるチーム SuperVision が発表した <strong>AlexNet</strong> が圧倒的なレベル差で優勝しました。</p></blockquote></blockquote><blockquote><blockquote><p><strong>5層の畳み込み層</strong> と <strong>3つの全結合層</strong> を持つ CNN で, <strong>ReLU関数</strong> を用いることで,シグモイド関数の問題勾配消失問題を回避している他,過学習対策として <strong>ドロップアウト(Dropout)</strong> が使われるなどしている。</p></blockquote></blockquote><blockquote><p>2013年</p><blockquote><p>NY大学の <strong>ZFNet</strong> が優勝しました。2012年に優勝した AlexNet の問題点を明確化し、それに対応する改良を施した CNN と言えます。</p></blockquote></blockquote><blockquote><p>2014年</p><blockquote><p>Google Xlab が <strong>GoogLeNet</strong> で優勝しました。</p></blockquote></blockquote><blockquote><blockquote><p>AlexNet や ZFNet と比較して層数が 5から <strong>21層</strong> に増えていることに特徴があります。</p></blockquote></blockquote><blockquote><blockquote><p>他にも <strong>Inception module</strong> や <strong>Global Average Pooling</strong> といった特徴的な技術が導入されています。</p></blockquote></blockquote><blockquote><blockquote><p>2014年は準優勝とはいえ オックスフォード（Oxford） 大学の VGGグループが発表した <strong>VGGNet</strong> も話題になりました。 </p></blockquote></blockquote><blockquote><blockquote><p>16層のネットワークからなるアーキテクチャをVGG16という。19層のネットワークからなるアーキテクチャをVGG19という。</p></blockquote></blockquote><blockquote><p>2015年</p><blockquote><p>優勝は Microsoft Research の <strong>ResNet</strong> です。</p></blockquote></blockquote><blockquote><blockquote><p>初めて人間のエラー率 5% を上回る精度を達成した。 </p></blockquote></blockquote><blockquote><blockquote><p>最大層数は <strong>152層</strong>。</p></blockquote></blockquote><blockquote><blockquote><p><strong>スキップコネクション</strong>　を用いている特徴がある。</p></blockquote></blockquote><blockquote><blockquote><p><strong>畳み込み層</strong>　と <strong>Shortcut Connection</strong> を組み合わせた <strong>残差ブロック</strong> を導入している、勾配消失問題に対処し,飛躍的に層を増やすことに成功した。</p></blockquote></blockquote><blockquote><p>2016年</p><blockquote><p>香港中文大学の <strong>CUImage</strong> です。</p></blockquote></blockquote><blockquote><p>2017年</p><blockquote><p>中国科学アカデミーの <strong>SENet</strong> です。</p></blockquote></blockquote><blockquote><blockquote><p>Squeeze and Excitation Module というモジュールを既存関数に挿入することで精度をあげていること。</p></blockquote></blockquote><h5 id="AIブーム"><a href="#AIブーム" class="headerlink" title="AIブーム"></a>AIブーム</h5><blockquote><p>第1次AIブーム</p><blockquote><p>1950年代後半から1960年代とされています。</p></blockquote></blockquote><blockquote><blockquote><p>1956年、<strong>ジョン・マッカーシー（John McCarthy）</strong> が主催の <strong>ダートマス会議</strong> で初めて「人工知能」という言葉が使用されたことが有名です。</p></blockquote></blockquote><blockquote><blockquote><p><strong>探索や推論</strong> といった研究を中心に盛り上がりを見せた。</p></blockquote></blockquote><blockquote><blockquote><p>これを象徴する最も著名な例としては,1997 年に IBM が開発した人工知能 <strong>Deep Blue</strong> がチェスの世界チャンピオンを破ったことが挙げられるだろう。</p></blockquote></blockquote><blockquote><blockquote><p>リバーシやパズル、迷路といった <strong>トイ・プロブレム（おもちゃの問題）</strong> にしか適用できないことがわかり、第1次AIブームは終焉を迎えました。</p></blockquote></blockquote><blockquote><p>第2次AIブーム</p><blockquote><p>1980 年代に入ると <strong>知識工学・エキスパートシステム</strong> に関する研究が盛りを見せた。</p></blockquote></blockquote><blockquote><blockquote><p>有名なエキスパートシステムには、<strong>有機化合物特定AIのDENDRAL（デンドラル）</strong> や <strong>抗生物質処方AIであるMYCIN（マイシン）</strong> があります。</p></blockquote></blockquote><blockquote><blockquote><p>2011 年に IBM が開発した人工知能 <strong>Watson</strong> がアメリカのクイズ番組「ジョパティ！」に出演し,歴代のチャンピオンを破ったことは人々に大きな衝撃を与えたことだろう。</p></blockquote></blockquote><blockquote><blockquote><p>専門家の間でも意見がわかれるような内容や曖昧な部分は定式化が難しく、複雑な問題に適用できなかったため第2次AIブームは終焉を迎えました。</p></blockquote></blockquote><blockquote><blockquote><p>知識獲得の <strong>ボトルネック</strong>：エキスパートシステムは人間による知識表現が必要であり、コンピュータ自身が知識を獲得することが出来ない現実がありました。</p></blockquote></blockquote><blockquote><p>第3次AIブーム</p><blockquote><p><strong>機械学習</strong> と <strong>深層学習（ディープラーニング）</strong> の登場から今日に至る。</p></blockquote></blockquote><blockquote><blockquote><p>スタンフォード大学発のプロジェクト ImageNet が主催する ILSVRC という世界的な （画像認識）のコンペティションにて,トロント大学のチームが Deep Learning を利用したモデルを用いて他の大学を圧倒する成績を叩き出したことである。</p></blockquote></blockquote><blockquote><blockquote><p>Google の「猫」である。これは Deep Learning により機械に「猫」というものを認識させることに成功した事例として世間に広く認識され,Deep Learning の広まりとともに人工知能ブームの到来を印象付けることとなった。</p></blockquote></blockquote><h5 id="AI-レベル1-ー-レベル4"><a href="#AI-レベル1-ー-レベル4" class="headerlink" title="AI レベル1 ー レベル4"></a>AI レベル1 ー レベル4</h5><blockquote><p>東京大学の松尾豊准教授によると,現在巷で人工知能と呼ばれているものは様々なレベルのものが混合しており,これをレベル 1 からレベル 4 までの 4つのレベルに分類できそうであると述べている。</p></blockquote><blockquote><ul><li>レベル1：学術分野としては制御工学やシステム工学に対応する,単純な制御プログラム</li></ul></blockquote><blockquote><ul><li>レベル2：探索や推論を活用し,限定された環境下における問題解決を行えるプログラム</li></ul></blockquote><blockquote><ul><li>レベル3：機械学習を活用し,多量のデータをもとに推論の仕組みや知識ベースが作成されているプログラム</li></ul></blockquote><blockquote><ul><li>レベル4：特徴表現学習と呼ばれ,特徴量自体を学習することができるプログラム</li></ul></blockquote><h5 id="AIの定義"><a href="#AIの定義" class="headerlink" title="AIの定義"></a>AIの定義</h5><blockquote><ul><li>松尾豊：人工的に作られた人間のような知能,ないしはそれを作る技術。</li></ul></blockquote><blockquote><ul><li>Stanford University の AI 研究者アーサー・サミュエル：明示的にプログラミングをしなくても学習する能力を,コンピュータに与える研究分野。</li></ul></blockquote><h5 id="ソフトウェアライブラリ"><a href="#ソフトウェアライブラリ" class="headerlink" title="ソフトウェアライブラリ"></a>ソフトウェアライブラリ</h5><blockquote><ul><li><strong>TensorFlow</strong>：google 社。これは大規模な GPU （Graphics Processing Unit） 環境での高速化に特徴があると言われている。</li></ul></blockquote><blockquote><ul><li><strong>CNTK</strong>：Microsoft 社</li></ul></blockquote><blockquote><ul><li><strong>Caffe</strong>：Berkeley Vision And Learning Center</li></ul></blockquote><blockquote><ul><li><strong>Chainer</strong>：PFN（Preferred Networks社）。その特徴である Define by Run は高く評価されている。</li></ul></blockquote><h5 id="チューリングテスト"><a href="#チューリングテスト" class="headerlink" title="チューリングテスト"></a>チューリングテスト</h5><blockquote><p>1950年にイギリスの数学者が考案した「機械は思考できるのか」という問題意識から提案した質疑応答式のテスト。</p></blockquote><blockquote><p>人工知能ができたかどうかを判定する方法としては,チューリングテストが著名である。画面とキーボードを通じて会話を行い,その相手がコンピュータであると見抜けなければ知的と判定するテスト。</p></blockquote><h5 id="強い-AIと弱い-AI"><a href="#強い-AIと弱い-AI" class="headerlink" title="強い AIと弱い AI"></a>強い AIと弱い AI</h5><blockquote><p>哲学者ジョン・サールは,AI を「強い AI」と「弱い AI」の二つに大別できると提唱した。「強い AI」の特徴として、精神や意識を持った AI。</p></blockquote><h5 id="機械学習"><a href="#機械学習" class="headerlink" title="機械学習"></a>機械学習</h5><blockquote><ul><li><strong>教師あり学習</strong>：各データにおいて入力とそれに対応する正しい出力 <strong>分類</strong> がセットになった訓練データが与えられ,ある入力があった際にそれがどのような出力を返すべきかを学習させる。</li></ul></blockquote><blockquote><ul><li><strong>教師なし学習</strong>：入力用のデータのみを与えられ,データの中に現れる <strong>一定のパターンやルール</strong> を抽出し,データに内在する構造を掴むのが目的である。ある共通項を見出しカテゴリ分けを行ったりするのに使われる。</li></ul></blockquote><blockquote><ul><li><strong>強化学習</strong> ：<strong>エージェントが自身が得る収益を最大化</strong> するために行動を選択し、それによって変化する状態の中で、最終的には最適な方策を獲得することを目指した学習手法です。</li></ul></blockquote><h5 id="表現学習"><a href="#表現学習" class="headerlink" title="表現学習"></a>表現学習</h5><blockquote><p>従来の機械学習には問題があった。それはどのような変数を予測や分類に用いるかを選ぶ <strong>特徴量</strong> の設計が精度を大きく左右するにも関わらず,最終的に人間の手による職人的作業に頼らざるを得ないということだ。この問題を打ち破ったのがディープラーニングであり,これは <strong>特徴量</strong> をコンピュータが自ら作り出すことができるようになった点に大きなブレイクスルーがある。こうした特徴から<strong>ディープラーニングは表現学習の一種</strong>に分類されている。</p></blockquote><h5 id="知能の三つの階層"><a href="#知能の三つの階層" class="headerlink" title="知能の三つの階層"></a>知能の三つの階層</h5><blockquote><ul><li>第一の階層：<strong>パターン処理</strong> で,環境からの情報のセンシングとそれに応じた行動というループが基本とされる。この際に重要となるのが 「身体性」という性質で,コンピュータはハードウェアを通じて外部環境との相互作用を得る。</li></ul></blockquote><blockquote><ul><li>第二の階層：<strong>記号の処理</strong> であり,人間はこれを通じて物事を抽象的に認識できるようになり,チェスなどのゲームを楽しむようになった。</li></ul></blockquote><blockquote><ul><li>第三の階層：<strong>他者とのインタラクション</strong> であり,我々が知識を獲得していく上で不可欠な営みである。</li></ul></blockquote><h5 id="シンギュラリティ（技術的特異点）"><a href="#シンギュラリティ（技術的特異点）" class="headerlink" title="シンギュラリティ（技術的特異点）"></a>シンギュラリティ（技術的特異点）</h5><blockquote><p>実業家レイ・カーツワイルが提唱した「シンギュラリティ（技術的特異点） 」という概念。</p></blockquote><blockquote><ul><li>レイ・カーツワイル：シンギュラリティは2045 年に到来すると述べている</li></ul></blockquote><blockquote><ul><li>ヒューゴ・デ・ガリス：２１世紀の後半に到来し、その時人工知能は人間の知能の１兆の１兆倍になる。</li></ul></blockquote><blockquote><ul><li>イーロン・マスク：OpenAIを設立。</li></ul></blockquote><blockquote><ul><li>オレン・エツィオーニ：馬鹿げている。</li></ul></blockquote><blockquote><ul><li>スティーブン・ホーキング：人類の終焉。</li></ul></blockquote><h5 id="フレーム問題-と-シンボル・グラウンディング問題"><a href="#フレーム問題-と-シンボル・グラウンディング問題" class="headerlink" title="フレーム問題 と シンボル・グラウンディング問題"></a>フレーム問題 と シンボル・グラウンディング問題</h5><blockquote><ul><li><strong>フレーム問題</strong>：これは人工知能の大家ジョン・マッカーシーが発起した課題であり,あるタスクを実行しようとした際に,その事柄に関係のある知識だけを取り出して利用するという人間には自然に行われていることが,コンピュータにとっては非常に実装が難しいという課題である。いま解こうとしている問題に関係のあることだけを選び出す。</li></ul></blockquote><blockquote><ul><li><strong>シンボル・グラウンディング問題</strong>：認知科学者スティーブン・ハルナッドにより提唱された。これは記号とそれが意味するものとを適切に結びつけることは可能かを問うものであり,これも人間には自然に行われていることがコンピュータにおいてはなかなか実現されていない。</li></ul></blockquote><h5 id="自然言語解析"><a href="#自然言語解析" class="headerlink" title="自然言語解析"></a>自然言語解析</h5><blockquote><ul><li>形態素解析<blockquote><p>文章を最小の意味をもつ単語に区切った後で、単語それぞれの品詞を判別する処理だ。最小の意味を持つ単語に区切るとはどういうことか。</p></blockquote></li></ul></blockquote><blockquote><ul><li>構文解析<blockquote><p>単語同士の関係を推測する処理だ。</p></blockquote></li></ul></blockquote><blockquote><ul><li>意味解析<blockquote><p>統計的な方法などを用いて、単語同士の結びつきを見出したりして、意味付けを行う処理だ。</p></blockquote></li></ul></blockquote><blockquote><ul><li>文脈解析<blockquote><p>これ、それ、あれ、どれといった指示語や省略された単語を補完する処理だ。</p></blockquote></li></ul></blockquote><h5 id="Deep-CNN-とは"><a href="#Deep-CNN-とは" class="headerlink" title="Deep CNN とは"></a>Deep CNN とは</h5><blockquote><p><strong>畳み込み層</strong> を幾重にも内部に組み込んだニューラルネットワークを形成することであり,これにより <strong>変形に対してより頑強な特徴表現を得ること</strong> に成功している。</p></blockquote><h5 id="ディープラーニングの画像認識"><a href="#ディープラーニングの画像認識" class="headerlink" title="ディープラーニングの画像認識"></a>ディープラーニングの画像認識</h5><blockquote><p><strong>クラス分類</strong>：”犬”,”猫”など単一のラベルを出力する。</p></blockquote><blockquote><p><strong>物体検出</strong>：領域とラベルを出力する。画像の中から <strong>バウンディングボックス</strong> と呼ばれる矩形領域で位置とカテゴリーの特定を行う。</p></blockquote><blockquote><p><strong>物体セグメンテーション</strong>：画素ごとにラベルを出力する。</p></blockquote><blockquote><p><strong>画像キャプション生成</strong>：画像の意味合いを理解し,キャプション（脚注）を出力する。</p></blockquote><blockquote><p><strong>画像生成</strong>：画像そのものを生成する。</p></blockquote><h5 id="ディープラーニングの典型的な音声認識システム"><a href="#ディープラーニングの典型的な音声認識システム" class="headerlink" title="ディープラーニングの典型的な音声認識システム"></a>ディープラーニングの典型的な音声認識システム</h5><blockquote><p>プロセス1：雑音・残響抑圧 (入力：音声　出力：音声）<br>音声を認識したい対象以外の雑音を分離する。</p></blockquote><blockquote><p>プロセス2：音素状態認識 (入力：音声　出力：音素）<br>音声の周波数スペクトル,すなわち音響特徴量をインプットとして,音素状態のカテゴリに分類する。</p></blockquote><blockquote><p>プロセス3：音素モデル (入力：音素　出力：文字列）<br>音素がどの文字であるかを推定する。</p></blockquote><blockquote><p>プロセス4：単語辞書 (入力：文字列　出力：単語）<br>認識した文字列から単語を特定し認識する。</p></blockquote><blockquote><p>プロセス5：言語モデル (入力：単語　出力：単語列）<br>単語系列仮説の尤度を評価する。</p></blockquote><blockquote><p>プロセス1～5を纏めて,すなわち,入力：音声　出力：単語列とする学習手法のことを <strong>End-to-End音声認識</strong> と呼ぶ。</p></blockquote><h5 id="音声合成、隠れマルコフモデル（HMM）-とは"><a href="#音声合成、隠れマルコフモデル（HMM）-とは" class="headerlink" title="音声合成、隠れマルコフモデル（HMM） とは"></a>音声合成、隠れマルコフモデル（HMM） とは</h5><blockquote><p>音声認識の逆過程である音声合成においても利用されている。</p></blockquote><blockquote><p>従来,音声合成,あるいは音声認識の分野においては <strong>HMM</strong> などの統計的手法により,大量のデータを集め,多数のコーパスを用意するものが一般的であった。</p></blockquote><blockquote><p>しかしながら,2016 年に DeepMind 社により発表されたニューラルネットワークのアルゴリズム <strong>WaveNet</strong> は従来に比べて圧倒的に高い質での音声合成に成功し,AIスピーカーが人間に近い自然な言語を話すことなどに大きく寄与している。</p></blockquote><h5 id="End-to-End-Learning"><a href="#End-to-End-Learning" class="headerlink" title="End to End Learning"></a>End to End Learning</h5><blockquote><p>ある一連の動作を学習する際に従来は一つ一つの動作を <strong>ステップバイステップ</strong> で学習していたものを,一つのネットワークとして表現することで <strong>全ての動作を一気に学習すること</strong> ができるようになったのは非常に大きいとされている。</p></blockquote><h5 id="照応解析-、分散表現学習とは"><a href="#照応解析-、分散表現学習とは" class="headerlink" title="照応解析 、分散表現学習とは"></a>照応解析 、分散表現学習とは</h5><blockquote><p>照応解析：文章内に存在する代名詞などが何を指し示しているのかを突き止めさせる解析である。</p></blockquote><blockquote><p>最も注目すべきは,言語の <strong>分散表現学習</strong> の成功である。代表的なものとして,google 社のミコロフは, <strong>Word2Vec</strong> という枠組みを提案し,これによってこれはある種の意味的な演算が行えることを示した。</p></blockquote><blockquote><p>分散表現学習の演算の事例：V（Prince） - V（Male） + V（Female） ≒ V（Princess）</p></blockquote><h5 id="常識推論タスク"><a href="#常識推論タスク" class="headerlink" title="常識推論タスク"></a>常識推論タスク</h5><blockquote><p>常識推論タスク：機械が知能を持っているか否かを判断することを目的とした知能テストが多数考案されており。</p></blockquote><blockquote><p>南カリフォルニア大学の Andrew Gordon の研究グループが提案した COPA （Choice of Plausible Alternatives） というものがある。これは「知能を持つ」ことが事象間の因果関係を理解することだと捉え,これを計測しようとしたものである。</p></blockquote><blockquote><p>Ernest Davis と Hector Levesque の研究グループが定式化した WSC があり,「統語的手がかりだけでは解けないような照応解析の問題が解けること」が知能を持つこととしてこれをテストの形にした。現在このテストは AI のトップ会議でコンペティションが開かれるなどしており,まだまだ精度は低いものの注目を浴びつつある。</p></blockquote><h5 id="自然言語の生成技術"><a href="#自然言語の生成技術" class="headerlink" title="自然言語の生成技術"></a>自然言語の生成技術</h5><blockquote><p><strong>n-gram言語モデル</strong> と <strong>リカレントニューラルネットワーク言語モデル（RNNLM）</strong>の二つに分かれており。</p></blockquote><blockquote><p>現在の主流の機械翻訳システムは,この <strong>RNNLM型デコーダ</strong> を活用し,中間データを介してエンコーダとデコーダが相対する形で構成された （エンコーダ・デコーダモデル） と呼ばれるモデルが改良されているものである。</p></blockquote><blockquote><p>google 社が 2016 年に発表した <strong>GNMT</strong> であり,従来のモデルに比べて言葉の流麗さが増したと言われている。</p></blockquote><h5 id="過生成と生成不足"><a href="#過生成と生成不足" class="headerlink" title="過生成と生成不足"></a>過生成と生成不足</h5><blockquote><p>RNNLM型デコーダの新たな問題</p></blockquote><blockquote><ul><li><strong>過生成</strong> の事例</li></ul></blockquote><blockquote><blockquote><p>入力：I got a book and a pen.<br>出力：私は本と本と本とペンを手に入れた</p></blockquote></blockquote><blockquote><ul><li><strong>生成不足</strong> の事例</li></ul></blockquote><blockquote><blockquote><p>入力：I got a book and a pen.<br>出力：私は本を手に入れた</p></blockquote></blockquote><h5 id="マルチエージェントシミュレーション-とは-多智能体系统"><a href="#マルチエージェントシミュレーション-とは-多智能体系统" class="headerlink" title="マルチエージェントシミュレーション とは　多智能体系统"></a>マルチエージェントシミュレーション とは　多智能体系统</h5><blockquote><p>エージェントと呼ぶ小さな AI プログラムを人間とみなして,エージェントが多数存在して相互作用することによって生じる現象を模倣し分析しようとするもの。</p></blockquote><h5 id="AI-が生成した創作物の知財制度"><a href="#AI-が生成した創作物の知財制度" class="headerlink" title="AI が生成した創作物の知財制度"></a>AI が生成した創作物の知財制度</h5><blockquote><p>2018年8月19日現在において,AIが生成した創作物はそれを生み出す過程において <strong>人間による創作的寄与がある場合</strong> において著作物性が認められる。</p></blockquote><h5 id="著作権法47条の7"><a href="#著作権法47条の7" class="headerlink" title="著作権法47条の7"></a>著作権法47条の7</h5><blockquote><p>インターネット上のデータ等の著作物から学習用データを解析することは営利目的の場合まで含め著作権侵害には当たらない。</p></blockquote><h5 id="「創作」の三つのステップ"><a href="#「創作」の三つのステップ" class="headerlink" title="「創作」の三つのステップ"></a>「創作」の三つのステップ</h5><blockquote><p>特許法下で「自然人の創作」を認める上で必要とされる「創作」の三つのステップ</p></blockquote><blockquote><blockquote><ul><li>課題の設定</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>解決手段候補の選択</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>実効性評価</li></ul></blockquote></blockquote><h5 id="蒸留モデル"><a href="#蒸留モデル" class="headerlink" title="蒸留モデル"></a>蒸留モデル</h5><blockquote><p>学習済モデルを直接コピーしなくても、入力データと出力データを用いて別途学習をすることで全く異なるモデルを生成できる、という行為です。</p></blockquote><h5 id="総務省はAIの社会実装によって想定されるリスク"><a href="#総務省はAIの社会実装によって想定されるリスク" class="headerlink" title="総務省はAIの社会実装によって想定されるリスク"></a>総務省はAIの社会実装によって想定されるリスク</h5><blockquote><ul><li>AI のアルゴリズムがブラックボックス化し,人間の制御ができなくなってしまう。</li></ul></blockquote><blockquote><ul><li>AI に関わる人間のリスク。</li></ul></blockquote><blockquote><ul><li>AI が人々の職を奪ってしまう。</li></ul></blockquote><blockquote><ul><li>自動運転車が引き起こした事故は誰が責任を負うのか。</li></ul></blockquote><h5 id="民間AI-開発を進める上でどのような規範"><a href="#民間AI-開発を進める上でどのような規範" class="headerlink" title="民間AI 開発を進める上でどのような規範"></a>民間AI 開発を進める上でどのような規範</h5><blockquote><p>2008年に <strong>AAAI</strong> では”Presidential Panel on Long-Term AI Futures: 2008-2009” と題して研究者が集まり,AIの社会的課題について検討するサブグループにて予想される様々な倫理的問題,法律的課題について議論がなされた。</p></blockquote><blockquote><p>イーロン・マスクが 2015 年に非営利団体として設立した <strong>OpenAI</strong> は,AI 研究の為のオープンソースソフトウェアを提供するなど様々な形で AI 研究を推進・サポートするとともに,技術的な取り組みを超えて AI の安全性に関する課題への対応策として,「失敗モデルへの五つの対応」を取りまとめて公開共有している。</p></blockquote><blockquote><p>Microsoft 社が 2016 年に発表した「AI 開発原則」などが有名である。</p></blockquote><h5 id="過学習"><a href="#過学習" class="headerlink" title="過学習"></a>過学習</h5><blockquote><p>学習したデータの範囲に対して汎用性のある大まかな傾向を捉えることを超えて,そのデータの中でのみ非常に高い説明力を誇るモデルを組みすぎた為に,未知のデータに対しては再現性のない瑣末な傾向までをも学習してしまい,未知のデータに対して適切な予測や分類ができないような状態に陥っていることを指す。</p></blockquote><h5 id="ホールド・アウト法"><a href="#ホールド・アウト法" class="headerlink" title="ホールド・アウト法"></a>ホールド・アウト法</h5><blockquote><p>データを分割し,分割したそれぞれのデータを用いて学習を行い,最も精度の高い値が得られたモデルを採用する。</p></blockquote><h5 id="重回帰分析評価手法"><a href="#重回帰分析評価手法" class="headerlink" title="重回帰分析評価手法"></a>重回帰分析評価手法</h5><blockquote><p>重回帰分析において,学習させて作成したモデルがどのくらい精度の良いものなのかを評価する際には幾つかの方法がある。</p></blockquote><blockquote><ul><li>決定係数：0 から 1 の間の値を取り,1 に近いほどモデルがデータに対して当てはまりが良いことを示す。</li></ul></blockquote><blockquote><ul><li>RMSE：作成したモデルによって導かれる予測値が実際の値よりどれだけずれているかという誤差の <strong>二乗の平均の平方根</strong> を求めたものである。</li></ul></blockquote><h5 id="ロジスティック回帰の最尤推定"><a href="#ロジスティック回帰の最尤推定" class="headerlink" title="ロジスティック回帰の最尤推定"></a>ロジスティック回帰の最尤推定</h5><blockquote><p>ロジスティック回帰は,ある事象の分類を 0 ～ 1 の値の確率として表現することができる。</p></blockquote><blockquote><p>このロジスティック回帰を行う際には,（最尤推定） が用いられ,最も確からしいパラメータを獲得することを目的としている。</p></blockquote><blockquote><p>このロジスティック回帰を用いるのに適切な事例としては,（見た目に関する様々な情報からある植物が何科に属するのかを分類する）などが挙げられる。</p></blockquote><h5 id="SVM"><a href="#SVM" class="headerlink" title="SVM"></a>SVM</h5><blockquote><p>機械学習でデータの分類を行う際の手法の一つとして,SVM: support vector machine という手法が古くから識別能力の高いモデル構築手法として存在する。</p></blockquote><blockquote><p>SVM の基本的な考え方は,分類した結果のグループ間の <strong>マージン</strong> が最大になるような線を求めるというものである。これにより,出来るだけ汎化性能を高めて,未知のデータを適切に分類しやすくしている。</p></blockquote><blockquote><p>SVM の特徴として, <strong>カーネルトリック</strong> というテクニックを駆使することにより,線形分離では分類が不可能なデータセットに対しても,うまくそれを分類することが可能であることが挙げられる。</p></blockquote><blockquote><p>カーネル法は <strong>決定境界を非線形にする</strong> ため。</p></blockquote><blockquote><p>カーネルトリックは <strong>内積計算をカーネル関数へ置換え,計算量を大幅に削減する</strong> ため。</p></blockquote><blockquote><p><strong>バッファ数</strong>：グループ分けの際に誤った分類をどれだけ許容するかを決める値である。</p></blockquote><blockquote><p><strong>スラック変数</strong>：一部のサンプルの誤分類に寛容になる。</p></blockquote><h5 id="ハイパーパラメータの最適な初期値を求める方法"><a href="#ハイパーパラメータの最適な初期値を求める方法" class="headerlink" title="ハイパーパラメータの最適な初期値を求める方法"></a>ハイパーパラメータの最適な初期値を求める方法</h5><blockquote><p><strong>グリッドサーチ</strong>：適切だと考えられるパラメータを複数用意し,それらの値の組み合わせを全通り総当たりで行い,最も良いハイパーパラメータを探す方法である。</p></blockquote><blockquote><p><strong>ランダムサーチ</strong>：考えられるパラメータの範囲を決め,ランダムにパラメータを組み合わせて学習させ,最も良いハイパーパラメータを探す方法である。</p></blockquote><h5 id="主成分分析（PCA）"><a href="#主成分分析（PCA）" class="headerlink" title="主成分分析（PCA）"></a>主成分分析（PCA）</h5><blockquote><p>主成分分析：<strong>次元削減アルゴリズム</strong> で機械学習アルゴリズムに入力する前に主成分分析を行い変数を削除することで,モデルの精度を向上させたり,学習を効率化することができる。</p></blockquote><blockquote><p>留意点：変数統合後の潜在変数の意味の解釈が主観的であり,客観的に一意に定まるものではないこと。</p></blockquote><h5 id="赤池情報量規準（AIC）"><a href="#赤池情報量規準（AIC）" class="headerlink" title="赤池情報量規準（AIC）"></a>赤池情報量規準（AIC）</h5><blockquote><p>説明変数として利用する変数ができるだけ少なくするようなモデルを高くする指標である。</p></blockquote><h5 id="アンサンブル学習"><a href="#アンサンブル学習" class="headerlink" title="アンサンブル学習"></a>アンサンブル学習</h5><blockquote><p>アンサンブル学習：機械学習においては,あまり性能が高くないモデルをいくつか組み合わせることによって,経験的に汎化性能が大きくなることがわかっており。</p></blockquote><blockquote><blockquote><p><strong>バギング</strong> : 複数のモデルをそれぞれ別に学習させ,各モデルの出力を平均もしくは多数決することで決める手法のこと</p></blockquote></blockquote><blockquote><blockquote><p><strong>ブースティング</strong> : まず一つモデルを学習して作成し,それを何度も訂正することを通じて性能を高めていく手法のこと</p></blockquote></blockquote><h5 id="k近傍法"><a href="#k近傍法" class="headerlink" title="k近傍法"></a>k近傍法</h5><blockquote><p>犯罪や,機械の故障を検知するために異常検知の手法が利用されることがある。異常検知には様々な手法があり,最も単純なものは,k近傍法などを用いて <strong>外れ値</strong> を検出する方法,系列データの <strong>変化点</strong> を検出する手法が挙げられる。</p></blockquote><h5 id="トピックモデル"><a href="#トピックモデル" class="headerlink" title="トピックモデル"></a>トピックモデル</h5><blockquote><p>トピックモデル：文章中に書かれている話題・テーマを抽出するための手法。</p></blockquote><blockquote><blockquote><p>LSI：テキストデータに特異値分解を適用した潜在意味解析。</p></blockquote></blockquote><blockquote><blockquote><p>LDA：ディリクレ分布という確率分布を利用した。</p></blockquote></blockquote><h5 id="正規化、標準化、正則化、白色化、量子化"><a href="#正規化、標準化、正則化、白色化、量子化" class="headerlink" title="正規化、標準化、正則化、白色化、量子化"></a>正規化、標準化、正則化、白色化、量子化</h5><blockquote><ul><li>正規化：データを 0 から 1 の間に収まるようにする。</li></ul></blockquote><blockquote><ul><li>標準化：データを平均を 0,標準偏差を 1 になるようにする。</li></ul></blockquote><blockquote><ul><li>正則化：パラメータのノルムが大きくなりにくくする。</li></ul></blockquote><blockquote><blockquote><p><strong>Lasso回帰</strong> は自動的に特徴量選択を行い,重要でないと判断された特徴量は自動的にモデルから消えるようになっている。</p></blockquote></blockquote><blockquote><blockquote><p><strong>Ridge回帰</strong> にはそのような機能はない。</p></blockquote></blockquote><blockquote><ul><li>白色化：すべての特徴量に相関がなくなるようにする。</li></ul></blockquote><blockquote><ul><li>量子化：機械学習において演算に用いる数値の表現を浮動小数点数から整数に変換することである。</li></ul></blockquote><h5 id="汎化誤差の三つの要素"><a href="#汎化誤差の三つの要素" class="headerlink" title="汎化誤差の三つの要素"></a>汎化誤差の三つの要素</h5><blockquote><p>誤差関数を二乗誤差としたとき,回帰のモデルの汎化誤差は（バリアンス（variance））,（バイアス（bias））,（ノイズ（noise））の三つの要素に分解できる。</p></blockquote><blockquote><blockquote><ul><li><strong>バリアンス（variance）</strong> ：モデルが複雑になりすぎて過学習の状態にある時に高くなり</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li><strong>バイアス（bias）</strong>：逆に単純すぎて未学習の状態にある時に高くなる。</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li><strong>ノイズ（noise）</strong>：データ自体に混入しておりモデルの種類や学習方法を工夫しても取り除くことは困難。</li></ul></blockquote></blockquote><h5 id="音声認識の精度測定-WERとCER"><a href="#音声認識の精度測定-WERとCER" class="headerlink" title="音声認識の精度測定 WERとCER"></a>音声認識の精度測定 WERとCER</h5><blockquote><p><strong>単語誤り率（Word Error Rate; WER）</strong>＝（挿入単語数 ＋ 置換単語数 ＋ 削除単語数）／正解単語数</p></blockquote><blockquote><p><strong>文字誤り率（Character Error Rate; CER）</strong>＝（挿入語数 ＋ 置換語数 ＋ 削除語数）／正解語数</p></blockquote><h5 id="ドローンの飛行規制"><a href="#ドローンの飛行規制" class="headerlink" title="ドローンの飛行規制"></a>ドローンの飛行規制</h5><blockquote><p>150m 以上の高さの空域、ヒト・モノから 30m 以内の飛行の禁止</p></blockquote><h5 id="コーセラ（Coursera）"><a href="#コーセラ（Coursera）" class="headerlink" title="コーセラ（Coursera）"></a>コーセラ（Coursera）</h5><blockquote><p>AI 研究の第一人者で,2014年から2017年にかけて Baidu のAI研究所所長を務めたAndrew Ng が創業した <strong>Coursera</strong> などは入門から上級まで様々なレベルの AI講義が開かれており,多くの受講者を惹きつけるに至っている。</p></blockquote><h5 id="AI-の研究開発戦略"><a href="#AI-の研究開発戦略" class="headerlink" title="AI の研究開発戦略"></a>AI の研究開発戦略</h5><blockquote><p>日本 - 新産業構造ビジョン</p><blockquote><p>内閣府は2019年に「AI戦略2019」を公表した。</p></blockquote></blockquote><blockquote><blockquote><p>「⼈間尊重」、「多様性」 、「持続可能」の３つの理念を掲げている。</p></blockquote></blockquote><blockquote><blockquote><p>2025年には、エキスパート人材を年に2,000人育成する目標を掲げている。</p></blockquote></blockquote><blockquote><blockquote><p>高校過程で2022年から「情報Ⅰ」を必修とすることを掲げている。</p></blockquote></blockquote><blockquote><p>英国 - RAS 2020 戦略</p></blockquote><blockquote><p>ドイツ - デジタル戦略2025</p></blockquote><blockquote><p>中国 - インターネットプラスAI3年行動実施法案、2017年に「次世代人工知能発展計画」を発表した。</p></blockquote><blockquote><p>米国政府は、2015年に「A Strategy for American Innovation」を策定した。</p></blockquote><blockquote><p>欧州委員会は、2018年に「Coordinated Plan on Artificial Intelligence」を発行した。</p></blockquote><h5 id="クラスタリング"><a href="#クラスタリング" class="headerlink" title="クラスタリング"></a>クラスタリング</h5><blockquote><p>非階層型クラスタリング：DBSCAN、k-means法</p></blockquote><blockquote><p>階層型クラスタリング：群平均法</p></blockquote><h5 id="次元圧縮-t-SNE"><a href="#次元圧縮-t-SNE" class="headerlink" title="次元圧縮 t-SNE"></a>次元圧縮 t-SNE</h5><blockquote><p>次元圧縮のために利用される手法であり、特に高次元での距離分布が低次元の距離分布にも合致するよう非線形型の変換を行う方法のことを<strong>t-SNE</strong> という。 tの意味は <strong>t分布</strong> 。</p></blockquote><h5 id="フィルタリング、レコメンデーションシステム、コールドスタート"><a href="#フィルタリング、レコメンデーションシステム、コールドスタート" class="headerlink" title="フィルタリング、レコメンデーションシステム、コールドスタート"></a>フィルタリング、レコメンデーションシステム、コールドスタート</h5><blockquote><p><strong>協調ベースフィルタリング</strong>：ユーザの <strong>履歴</strong> を基に。</p></blockquote><blockquote><p><strong>内容ベースフィルタリング</strong>：アイテムの <strong>特徴</strong> を基に。</p></blockquote><blockquote><p>Webサイトの新規ユーザーやサイトに新しく登録された情報の場合、ユーザの好みを判断する情報が乏しいため、適切な情報を推薦することができない問題のことを<strong>コールドスタート</strong>問題といいます。</p></blockquote><h5 id="スパースモデリング（稀疏建模）とオッカムの剃刀"><a href="#スパースモデリング（稀疏建模）とオッカムの剃刀" class="headerlink" title="スパースモデリング（稀疏建模）とオッカムの剃刀"></a>スパースモデリング（稀疏建模）とオッカムの剃刀</h5><blockquote><p>スパースモデリング：あらゆるものごとに含まれる本質的な情報はごくわずかである(=スパース性)という仮定に基づき、データそのものではなく同士の関係性に注目することで、少量のデータでも分析可能とする技術。</p></blockquote><blockquote><p>オッカムの剃刀：ある事柄を説明するためには、必要以上に多くを仮定するべきでない。</p></blockquote><h5 id="人間中心のAI社会原則"><a href="#人間中心のAI社会原則" class="headerlink" title="人間中心のAI社会原則"></a>人間中心のAI社会原則</h5><blockquote><p>2019年に内閣府にて「人間中心のAI社会原則」が決定された。ここに示された基本理念に基づく「AI社会原則」：<strong>セキュリティを確保できること</strong>。</p></blockquote><h5 id="データオーギュメンテーション"><a href="#データオーギュメンテーション" class="headerlink" title="データオーギュメンテーション"></a>データオーギュメンテーション</h5><blockquote><p>Cutout：画像中のランダムな位置を中心とした正方形領域を，ランダムな値でマスクする。</p></blockquote><blockquote><p>CutMix：Cutoutの改良版で，画像を2枚用意し，一つの画像からもう一つの画像へコピーする手法である。</p></blockquote><blockquote><p>Random Erasing：画像中のランダムな位置に，ランダムな縦横比の長方形を領域をランダムな値でマスクする。少ないデータでも学習することができる。</p></blockquote><blockquote><p>AugMix：複数の変換をかけた画像を最後に混ぜ合わせる手法である。</p></blockquote><blockquote><p>data augmentation：2つの画像を合成して新しいサンプルを作成する手法</p></blockquote><h5 id="MobileNet"><a href="#MobileNet" class="headerlink" title="MobileNet"></a>MobileNet</h5><blockquote><p>Googleによって発表された。畳み込みの計算を分割することで，計算量の減少を達成した。</p></blockquote><blockquote><p>ハイパーパラメータとして <strong>width multiplier</strong> と <strong>resolution multiplier</strong> を用いる。</p></blockquote><h5 id="Neural-ArchitectureSearch-NAS"><a href="#Neural-ArchitectureSearch-NAS" class="headerlink" title="Neural ArchitectureSearch(NAS)"></a>Neural ArchitectureSearch(NAS)</h5><blockquote><p>ニューラルネットワークの <strong>構造自体</strong> や <strong>パラメータ</strong> を最適化したうえで、<strong>重み</strong> を最適化します。</p></blockquote><blockquote><p>パラメータ最適化のみであればベイズ最適化や遺伝アルゴリズム、GridSearch等で実現されていましたが、NASはその <strong>さらに前段階</strong> で構造を最適化します。</p></blockquote><blockquote><p>膨大な計算量が必要な点が改善点とされている。</p></blockquote><blockquote><p>GoogleがGCPで画像分類の <strong>Cloud AutoML</strong> を実現するための理論である。</p></blockquote><h5 id="MnasNet"><a href="#MnasNet" class="headerlink" title="MnasNet"></a>MnasNet</h5><blockquote><p>Googleによって発表された。AutoMLを参考にしたモバイル用のCNNモデル設計である。</p></blockquote><blockquote><p>手動設計のMobileNetV2を速度と正確性で圧倒する性能を見せた</p></blockquote><blockquote><p>速度情報を探索アルゴリズムの報酬に組み込むことで，速度の制約に対処した。</p></blockquote><h5 id="セグメンテーション（分割）による物体検出の方法"><a href="#セグメンテーション（分割）による物体検出の方法" class="headerlink" title="セグメンテーション（分割）による物体検出の方法"></a>セグメンテーション（分割）による物体検出の方法</h5><blockquote><p>インスタンスセグメンテーション：矩形を基本とした境界ボックス単位で物体を抽出する手法であり, <strong>YOLO</strong> から派生したYOLACT++はこの手法を採用した物体検出用の深層学習モデルである。</p></blockquote><blockquote><blockquote><ul><li><strong>インスタンスセグメンテーション</strong>：同一ラベルであっても個が区別される。</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li><strong>セマンティックセグメンテーション</strong>：同一ラベルでも個が区別されないという特徴がある。</li></ul></blockquote></blockquote><blockquote><p><strong>セマンティックセグメンテーション</strong> を用いれば, <strong>インスタンスセグメンテーション</strong> では検出が困難な空や道など, <strong>形が不定の対象</strong> であっても検出可能となる場合がある。</p></blockquote><blockquote><p>また,2019年には <strong>インスタンスセグメンテーション</strong> と <strong>セマンティックセグメンテーション</strong> を組み合わせた <strong>パノプティックセグメンテーション</strong> と呼ばれる手法がgoogleチームより発表された。</p></blockquote><h5 id="Segnet"><a href="#Segnet" class="headerlink" title="Segnet"></a>Segnet</h5><blockquote><p><strong>Segnet</strong> は画像の <strong>セマンティックセグメンテーション</strong> 用に開発された深層学習モデルの一つである。</p></blockquote><blockquote><p>モデルの構造について、</p><blockquote><p>エンコーダ－部分はCNNモデルであるVGG16の一部が採用されたシンプルな作りとなっている。</p></blockquote></blockquote><blockquote><blockquote><p>デコーダー部分では,エンコーダーによって,インプット時よりも画素数が小さくなった画像を（Up sampled）層と呼ばれる層を通過させることで,インプットと同じ大きさに復元をする。</p></blockquote></blockquote><h5 id="U-Net"><a href="#U-Net" class="headerlink" title="U-Net"></a>U-Net</h5><blockquote><p>U-Netでは, <strong>Skipconnection</strong> と呼ばれるエンコーダー部で取得した画像の特徴マップを,デコーダー部で再活用することのできる構造が採用されているため,プーリングや畳み込みといった層を通過する際の <strong>情報削減</strong> に強い特徴を有した <strong>セマンティックセグメンテーションモデル</strong> である。</p></blockquote><h5 id="Open-Pose"><a href="#Open-Pose" class="headerlink" title="Open Pose"></a>Open Pose</h5><blockquote><p><strong>Open Pose</strong> はカーネギーメロン大学のZhe Caoらが2016年に論文発表した,2D画像の複数人物の姿勢を可視化し,効率的に推定するモデルである。</p></blockquote><blockquote><p>手法の概要として,まず入力画像から部位の位置の推定（S・confidense maps）と,部位の連関を表す（L・Part Affinity Fields（PAFs））を算出し,その後（S・）と（L・）の集合から同じ人物の部位を組み合わせ、姿勢の状態を出力する。</p></blockquote><h5 id="Bidirectional-RNN（BiRNN）"><a href="#Bidirectional-RNN（BiRNN）" class="headerlink" title="Bidirectional RNN（BiRNN）"></a>Bidirectional RNN（BiRNN）</h5><blockquote><p>Bidirectional RNN（双方向RNN,BRNN)とは, <strong>中間層の出力を未来への順伝播</strong> と <strong>過去への逆伝播</strong> の両方向に伝播するネットワークである。</p></blockquote><h5 id="Backpropagation-Through-Time（BPTT）随时间反向传播"><a href="#Backpropagation-Through-Time（BPTT）随时间反向传播" class="headerlink" title="Backpropagation Through Time（BPTT）随时间反向传播"></a>Backpropagation Through Time（BPTT）随时间反向传播</h5><blockquote><p>Backpropagation Through Time（BPTT）は、elman networkの学習にも使用されている,ある種のRNNを学習するための勾配ベースの手法である。</p></blockquote><h5 id="パルス符号変調"><a href="#パルス符号変調" class="headerlink" title="パルス符号変調"></a>パルス符号変調</h5><blockquote><p>パルス符号変調：<strong>アナログ信号のデジタル化</strong>に用いられる変調方式であり。</p></blockquote><blockquote><blockquote><ul><li><strong>標本化</strong>：アナログ信号を一定時間ごとに区切り、その値を読み込むこと（サンプリングとも呼ぶ）。</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li><strong>量子化</strong>：標本化し読み込んだ値をデジタル信号に変換できるように加工すること。</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li><strong>符号化</strong>：量子化された値を指定された二進コードなどで符号化すること。</li></ul></blockquote></blockquote><h5 id="音声スペクトル"><a href="#音声スペクトル" class="headerlink" title="音声スペクトル"></a>音声スペクトル</h5><blockquote><p>音声スペクトルから得られる情報として,声帯の振動に対応した音声信号スペクトルと,声道・鼻腔における共振・反共振特性に関連した各音韻ごとの違いである音声信号スペクトルの2種類に分けられるが, <strong>音声認識などに使用する音韻の識別には音声信号スペクトルのみ</strong>が必要である。</p></blockquote><blockquote><p>言葉を発してできる複数の周波数のピークをフォルマントといい,声道の共振周波数をフォルマント周波数と呼ぶ。</p></blockquote><blockquote><p>音韻論とは,音素について研究する言語学の一部門であり,音韻とはある特定の言語の音の体系のことを指す。たとえば、日本語の「あ」は「あ・い・う・え・お」という体系の一部である。</p></blockquote><h5 id="メル周波数ケプストラム係数（MFCC）"><a href="#メル周波数ケプストラム係数（MFCC）" class="headerlink" title="メル周波数ケプストラム係数（MFCC）"></a>メル周波数ケプストラム係数（MFCC）</h5><blockquote><p>メル周波数ケプストラム係数（MFCC）：音声認識や音楽ジャンル分類などで使われる特徴量であり,人間の聴覚特性を考慮した周波数スペクトルの概形を表す。</p></blockquote><h5 id="WaveNet、WaveGlow、WaveRNN、Tacotron2"><a href="#WaveNet、WaveGlow、WaveRNN、Tacotron2" class="headerlink" title="WaveNet、WaveGlow、WaveRNN、Tacotron2"></a>WaveNet、WaveGlow、WaveRNN、Tacotron2</h5><blockquote><p>WaveNet：量子化された音声を1つずつ, 1秒間に16000個の音声データを学習データとして学習するモデルである。</p></blockquote><blockquote><p>WaveGlow：WaveNetを改良した軽量のモデルである。</p></blockquote><blockquote><p>WaveRNN：WaveNetを改良した1層RNN+全結合2層のニューラルネットのモデルである。</p></blockquote><blockquote><p>Tacotron2：テキストを人が話すような音声に変換するモデルである。</p></blockquote><h5 id="メル尺度"><a href="#メル尺度" class="headerlink" title="メル尺度"></a>メル尺度</h5><blockquote><p>メル尺度：心理学者のStanley Smith Stevensらによって提案された, 人間が感じる音の高さに基づいた, 音高の知覚尺度である。</p></blockquote><blockquote><p>例えば人間が低音域の差は見抜けくことができるが, 高音域の違いを見抜くのが難しい。 メル尺度も同様の考えであり, 周波数が高いほどメル尺度が増加しにくくなる。</p></blockquote><h5 id="MeCab"><a href="#MeCab" class="headerlink" title="MeCab"></a>MeCab</h5><blockquote><p>MeCab：京都大学情報学研究科-日本電信電話株式会社コミュニケーション科学基礎研究所 共同研究ユニットプロジェクトを通じて開発されたオープンソース形態素解析エンジンである。</p></blockquote><h5 id="N-gram"><a href="#N-gram" class="headerlink" title="N-gram"></a>N-gram</h5><blockquote><p>任意の文字列やテキストをいくつかの単語や文字のペアでn個ずつ分割し, ペア内の文脈を考慮してテキストを解析する手法である。 1つの漢字を読み取るときに単語の前後関係から読みを解析するときなどに利用できる。</p></blockquote><h5 id="BoW"><a href="#BoW" class="headerlink" title="BoW"></a>BoW</h5><blockquote><p>BoW(Bag-of-Words)は任意の文字列やテキストに対して, 記載内容の特徴を分析するため, 単語の出現回数を読み取る手法である。 記述内容が肯定的なのか否定的なのかの判定などに利用できる。</p></blockquote><h5 id="データを表現する手法"><a href="#データを表現する手法" class="headerlink" title="データを表現する手法"></a>データを表現する手法</h5><blockquote><ul><li><strong>ラベルエンコーディング</strong>：データにIDをつけて表現する手法である。</li></ul></blockquote><blockquote><p><strong>カウントエンコーディング</strong>：データの出力回数などをラベルとして表現する手法である。</p></blockquote><blockquote><p><strong>ワンホットベクトル</strong>：ワンホットベクトルは, 全要素のうちが1つが1で残りの成分が全て0で表現するベクトルである。</p></blockquote><blockquote><p><strong>ターゲットエンコーディング</strong>：説明変数として, カテゴリ変数と目的変数を用い、その特徴量で表現する手法である。</p></blockquote><h5 id="TF-IDF"><a href="#TF-IDF" class="headerlink" title="TF-IDF"></a>TF-IDF</h5><blockquote><p>TF-IDF：<strong>単語の出現頻度(TF)</strong> と <strong>単語が使われている文の割合の逆数(IDF)</strong> で単語の重要度を示す手法である。</p></blockquote><h5 id="単語の意味をベクトルで表現するモデル"><a href="#単語の意味をベクトルで表現するモデル" class="headerlink" title="単語の意味をベクトルで表現するモデル"></a>単語の意味をベクトルで表現するモデル</h5><blockquote><ul><li><strong>ベクトル空間モデル</strong>：ベクトル間の距離や内積などから文章の意味を表現するモデルである。</li></ul></blockquote><blockquote><ul><li><strong>単語埋め込みモデル</strong>：単語埋め込みモデルは, 単語の意味をベクトルで表現するモデルである。複数の単語の関係性をベクトルの演算によって導き出すことに使われている(例。 「王様」-「男性」+「女性」=「女王」)。</li></ul></blockquote><blockquote><ul><li><strong>マルチタスク言語モデル</strong>：構文解析や, 前文予測などに使われる文章表現のベクトルモデルである。</li></ul></blockquote><blockquote><ul><li><strong>普遍埋め込みモデル</strong>：複数課題間に共通する, 文章埋め込み表現を学習させたモデルである。</li></ul></blockquote><h5 id="スキップグラム"><a href="#スキップグラム" class="headerlink" title="スキップグラム"></a>スキップグラム</h5><blockquote><p>スキップグラム：<strong>ある単語を与えて周辺の単語</strong> を予測するモデルである。</p></blockquote><h5 id="CBOW"><a href="#CBOW" class="headerlink" title="CBOW"></a>CBOW</h5><blockquote><p>CBOWは, スキップグラムの逆で <strong>周辺の単語からある単語</strong> を予測するモデルである。</p></blockquote><h5 id="fastText"><a href="#fastText" class="headerlink" title="fastText"></a>fastText</h5><blockquote><p>fastTextは, 個々の単語を高速でベクトルに変換しテキスト分類を行うモデルである。</p></blockquote><blockquote><p>word2vecとの違いとして、単語の表現に文字の情報を含めて, 存在しない単語を表現しやすくすることができる。</p></blockquote><h5 id="ELMo"><a href="#ELMo" class="headerlink" title="ELMo"></a>ELMo</h5><blockquote><p>ELMo：文脈から意味を演算するモデルである。</p></blockquote><blockquote><p>双方向のLSTMで学習することにより, 同じ単語でも文脈によって異なる表現を獲得することができる手法である。</p></blockquote><h5 id="CTC（Connectionist-Temporal-Classification）"><a href="#CTC（Connectionist-Temporal-Classification）" class="headerlink" title="CTC（Connectionist Temporal Classification）"></a>CTC（Connectionist Temporal Classification）</h5><blockquote><p>音声認識において,入力された音声を音素として出力したいが,その音素数が必ずしも入力された音声と一致するわけではなく矛盾が生じる場合がある。これを解決する手法がCTC（Connectionist Temporal Classification）である。</p></blockquote><h5 id="Self-Attention"><a href="#Self-Attention" class="headerlink" title="Self-Attention"></a>Self-Attention</h5><blockquote><p>RNNを利用したニューラル機械翻訳では,時間軸にそって順にデータを読み込む必要があったため並列処理ができなかった。</p></blockquote><blockquote><p>これを解決するためにSelf-Attentionと呼ばれるネットワーク構造を利用することにより並列処理を可能にした。</p></blockquote><blockquote><p>Self-Attentionを導入することにより並列処理は可能になるが,単語の位置関係が把握できなくなる。これを解決するため位置エンコーディングと呼ばれる単語の出現位置情報を付加することにより,間接的に単語の位置情報や位置関係を考慮することができるようになった。</p></blockquote><h5 id="BERT"><a href="#BERT" class="headerlink" title="BERT"></a>BERT</h5><blockquote><p>BERT（Bidirectional Encoder Representation from Transforms）：トランスフォーマーのエンコーダーを利用するため通常の言語モデルによる学習は行えず,MLMとNSPというタスクにより事前学習をおこなう。</p></blockquote><blockquote><p>BERTなどによる言語理解タスクのベンチマーク用データセットとしてGLUE（General Language Understanding Evaluation）などのデータセットが公開されている。</p></blockquote><blockquote><p>後継モデル：ALBERT、ERNIE、XLNet</p></blockquote><h5 id="Vision-Transformer"><a href="#Vision-Transformer" class="headerlink" title="Vision Transformer"></a>Vision Transformer</h5><blockquote><p>Vision Transformer：自然言語処理の分野で発展したTransformerを画像処理に流用したものである。RNNやCNNを用いず Attentionを使用している。</p></blockquote><blockquote><p>Vision Transformer：画像を単語のように分割することによりCNNを使用せず,Transformerに近いモデルを使用している。</p></blockquote><h5 id="DQN"><a href="#DQN" class="headerlink" title="DQN"></a>DQN</h5><blockquote><p>行動価値（Q値）に対する学習と,ディープラーニングの組み合わせはDQN（Deep Q-Network）と呼ばれる。</p></blockquote><blockquote><p>DQNはたまたまQ値が高いところを学習してしまう場合があり,それを防ぐ手段にDQNを二重化したダブルDQNがある。</p></blockquote><blockquote><p>強化学習における行動価値関数を,従来とは異なり CNN に置き換えて近似を試みたモデルである。</p></blockquote><blockquote><p>google 社傘下の DeepMind 社が開発した囲碁対局ソフト Alpha Go が世界チャンピオンを打ち破ったものが記憶に新しいだろう。</p></blockquote><h5 id="デュエリングネットワーク"><a href="#デュエリングネットワーク" class="headerlink" title="デュエリングネットワーク"></a>デュエリングネットワーク</h5><blockquote><p>デュエリングネットワークは行動価値を *<em>状態価値関数（状態） *</em>と  *<em>Advantage関数（行動） *</em> に分割することにより,行動にかかわらず状態を学習することができるようにしたものである。</p></blockquote><h5 id="noisy-network"><a href="#noisy-network" class="headerlink" title="noisy network"></a>noisy network</h5><blockquote><p>noisy network：ネットワークそのものに学習可能なパラメータと共に外乱を与え,それも含めて学習させていく手法である。</p></blockquote><blockquote><p>常にその時点で価値の高い行動をとり続けた場合,別の行動をとる可能性がなくなってしまう。この問題点をネットワークそのものに学習可能なパラメータと共に外乱を与え,それも含めて学習させていくことでより長期的で広範囲に探索をすすめることで改善するという方法。</p></blockquote><h5 id="Rainbowアルゴリズム"><a href="#Rainbowアルゴリズム" class="headerlink" title="Rainbowアルゴリズム"></a>Rainbowアルゴリズム</h5><blockquote><p>Rainbow：<strong>DQN</strong> 、 <strong>Categorical DQN</strong> 、 <strong>Multi-Step RL</strong> 、 <strong>Double DQN</strong> 、 <strong>Prioritized Experience Reply</strong> 、 <strong>Dueling Net</strong> 、 <strong>Noisy Net</strong> という7種類のアルゴリズムを統合したアルゴリズムである。</p></blockquote><h5 id="状態表現学習"><a href="#状態表現学習" class="headerlink" title="状態表現学習"></a>状態表現学習</h5><blockquote><p>環境の状態をあらかじめ学習しておくことで深層強化学習の学習効率を高める手法。</p></blockquote><h5 id="SAC-Soft-Actor-Critic"><a href="#SAC-Soft-Actor-Critic" class="headerlink" title="SAC(Soft Actor-Critic)"></a>SAC(Soft Actor-Critic)</h5><blockquote><p>SAC：連続値制御の深層強化学習モデルである。<strong>方策関数Actor</strong> と <strong>softQ関数</strong> を,ニューラルネットワークで実装する。連続値制御の深層強化学習モデルである。</p></blockquote><h5 id="報酬成型-Reward-Shaping"><a href="#報酬成型-Reward-Shaping" class="headerlink" title="報酬成型(Reward Shaping)"></a>報酬成型(Reward Shaping)</h5><blockquote><p>報酬成型(Reward Shaping)：通常の報酬値に,追加の値を加えることで学習速度を向上させることができる。</p></blockquote><h5 id="オフライン強化学習"><a href="#オフライン強化学習" class="headerlink" title="オフライン強化学習"></a>オフライン強化学習</h5><blockquote><p>オフライン強化学習：強化学習をオフラインで過去に蓄積されたデータのみで学習を行う手法である。医療・ロボティクスなどの実環境との相互作用へのリスクの大きい分野で期待されている。</p></blockquote><h5 id="Sim2Real-Simulation-To-Real"><a href="#Sim2Real-Simulation-To-Real" class="headerlink" title="Sim2Real(Simulation-To-Real)"></a>Sim2Real(Simulation-To-Real)</h5><blockquote><p>Sim2Real(Simulation-To-Real)：シミュレーションを用いて方策を学習し,その学習した方策を現実に転移させる手法である。</p></blockquote><h5 id="ドメインランダマイゼーション-Domain-Randomization"><a href="#ドメインランダマイゼーション-Domain-Randomization" class="headerlink" title="ドメインランダマイゼーション(Domain Randomization)"></a>ドメインランダマイゼーション(Domain Randomization)</h5><blockquote><p>ドメインランダマイゼーション(Domain Randomization)：ランダム化されたプロパティを使用して様々な学習用のシミュレーション環境を作成する手法である。これらすべての環境で機能するようにモデルを学習していく。</p></blockquote><h5 id="剪定"><a href="#剪定" class="headerlink" title="剪定"></a>剪定</h5><blockquote><p>剪定：決定木において過学習を防ぐために枝数を制限する手法である。</p></blockquote><h5 id="プルーニング"><a href="#プルーニング" class="headerlink" title="プルーニング"></a>プルーニング</h5><blockquote><p>プルーニング：ニューラルネットワークの重み(パラメータ)の一部を取り除く手法である。</p></blockquote><h5 id="オープンデータ"><a href="#オープンデータ" class="headerlink" title="オープンデータ"></a>オープンデータ</h5><blockquote><p>官民データ活用推進基本法（平成２８年法律第１０３号）で、オープンデータへの取り組みが義務付けられ、オープンデータへの取り組み組により、国民参加・官民協働の推進を通じた諸課題の解決、経済活性化、行政の高度化・効率化等が期待されている。</p></blockquote><h5 id="法律で保護"><a href="#法律で保護" class="headerlink" title="法律で保護"></a>法律で保護</h5><blockquote><p>学習用データ、プログラム、データベース、仕様書、及び、ＡＩによる成果物等のデータは法律で保護されている場合がある。</p></blockquote><blockquote><p>特許出願をして特許権を取得して保護を図る、及び、不正競争防止法でデータ等の保護を図るには、営業秘密である必要がある。</p></blockquote><blockquote><p>営業秘密の要件は不正競争防止法第２条第６項で定められている有用性、秘密管理性、及び、非公知性である。</p></blockquote><h5 id="自己符号化器-Autoencoder"><a href="#自己符号化器-Autoencoder" class="headerlink" title="自己符号化器 (Autoencoder)"></a>自己符号化器 (Autoencoder)</h5><blockquote><p>2006年にジェフリー・ヒントンらが提唱したニューラルネットワークを使用した次元圧縮のためのアルゴリズム。</p></blockquote><h5 id="Actor-Critic"><a href="#Actor-Critic" class="headerlink" title="Actor-Critic"></a>Actor-Critic</h5><blockquote><p>actorは行動を決定し、criticは環境から情報を集めることで状態の価値を推定し、これに基づいて actorの行動を評価する。</p></blockquote><blockquote><p>Actor-Criticを応用したSoft Actor-Criticという手法がある。</p></blockquote><blockquote><p>ロボットの制御などロボット工学でも活用が進んでいる。</p></blockquote><h5 id="製造業のデジタル化の各国の取り組み"><a href="#製造業のデジタル化の各国の取り組み" class="headerlink" title="製造業のデジタル化の各国の取り組み"></a>製造業のデジタル化の各国の取り組み</h5><blockquote><ul><li>タイ政府は、2015年に「Thailand 4.0」を発表している。</li></ul></blockquote><blockquote><ul><li>インドネシア工業省は、2019年に「Making Indonesia 4.0」を発表している。 </li><li>ドイツ政府は、2011年に「Industrie 4.0」を発表している。</li></ul></blockquote><blockquote><ul><li>マレーシア政府は、2018年に「Industry4WRD」を発表している。</li></ul></blockquote><h5 id="方策勾配法"><a href="#方策勾配法" class="headerlink" title="方策勾配法"></a>方策勾配法</h5><blockquote><p>方策をあるパラメタで表される関数とし、そのパラメタを学習することで、直接方策を学習していく。</p></blockquote><blockquote><p>方策反復法の1つの手法である。</p></blockquote><blockquote><p>方策勾配定理に基づき実装される。</p></blockquote><h5 id="Society5-0"><a href="#Society5-0" class="headerlink" title="Society5.0"></a>Society5.0</h5><blockquote><p>日本政府は Society5.0 と呼ばれる、仮想空間と現実空間を高度に融合させたシステムにより、経済発展と社会的課題の解決を両立する、人間中心の社会を提唱した。</p></blockquote><h5 id="LOD"><a href="#LOD" class="headerlink" title="LOD"></a>LOD</h5><blockquote><p>ウェブ上でコンピュータ処理に適したデータを公開・共有するための方法であり、WikipediaをLOD化したDBpediaも作られている。</p></blockquote><h5 id="AI効果"><a href="#AI効果" class="headerlink" title="AI効果"></a>AI効果</h5><blockquote><p>かつて人工知能と呼ばれていたとしても、原理がわかると知性とはみなされなくなる心理効果。</p></blockquote><h5 id="XAI、DARPA"><a href="#XAI、DARPA" class="headerlink" title="XAI、DARPA"></a>XAI、DARPA</h5><blockquote><p>XAI(Explainable AI：説明可能なAI)への投資プログラムを発表した団体としてDARPA。</p></blockquote><h5 id="End-to-End-Learning-1"><a href="#End-to-End-Learning-1" class="headerlink" title="End-to-End Learning"></a>End-to-End Learning</h5><blockquote><p>ロボットの一連の動作を人手を介さず、単一のニューラルネットワークによって表現する学習する方法。</p></blockquote><h5 id="AI関連の主要国際会議"><a href="#AI関連の主要国際会議" class="headerlink" title="AI関連の主要国際会議"></a>AI関連の主要国際会議</h5><blockquote><p>ICJI：記号推論などの伝統的なテーマを含む人工知能技術全般をテーマとしている学会。</p></blockquote><blockquote><p>NeurIPS：ニューラルネットワーク技術を主にテーマとしている学会であるが、近年は機械学習をテーマにした発表が増加している。</p></blockquote><blockquote><p>CVPR：画像認識を主にテーマとしている学会。</p></blockquote><h5 id="情報銀行"><a href="#情報銀行" class="headerlink" title="情報銀行"></a>情報銀行</h5><blockquote><p>PDSなどのシステムを活用して個人のデータを管理するとともに、個人の指示又は予め指定した条件に基づき、個人に代わり妥当性を判断の上、データを第三者(他の事業者)に提供する事業及び事業者を情報銀行という。</p></blockquote><h5 id="バイト単位"><a href="#バイト単位" class="headerlink" title="バイト単位"></a>バイト単位</h5><blockquote><p>PB(ペタバイト) &lt; EB(エクサバイト) &lt; ZB(ゼタバイト) &lt; YB(ヨタバイト)</p></blockquote><h5 id="ノーフリーランチ"><a href="#ノーフリーランチ" class="headerlink" title="ノーフリーランチ"></a>ノーフリーランチ</h5><blockquote><p>どのような問題に対しても万能な汎用アルゴリズムは存在しないという。</p></blockquote><h5 id="データセット"><a href="#データセット" class="headerlink" title="データセット"></a>データセット</h5><blockquote><ul><li>Fashion-MNIST：学習用に60,000枚、テスト用に10,000枚用意された10種類に分類できる衣類品画像のデータセット。</li></ul></blockquote><blockquote><ul><li>CIFAR：学習用に50,000枚、テスト用に10,000枚用意された10種類もしくは100種類に分類できるデータセット。</li></ul></blockquote><h5 id="意味ネットワーク"><a href="#意味ネットワーク" class="headerlink" title="意味ネットワーク"></a>意味ネットワーク</h5><blockquote><p>第2次AIブームでは、いかにして機械に知識を与えるかがテーマであった。自然言語処理の研究では 文や単語の意味、概念間の連想関係、知識などを図式化し定義する。</p></blockquote><h5 id="デジタルトランスフォーメーション-DX"><a href="#デジタルトランスフォーメーション-DX" class="headerlink" title="デジタルトランスフォーメーション(DX)"></a>デジタルトランスフォーメーション(DX)</h5><blockquote><p>2004年にエリック・ストルターマンが「ITの浸透が、人々の生活をあらゆる面でより良い方向に変化させる」を デジタルトランスフォーメーション と定義し、日本おいても経済産業省がデジタルトランスフォーメーションを推進するためのガイドラインなどを整備している。</p></blockquote><h5 id="インセプションモジュール"><a href="#インセプションモジュール" class="headerlink" title="インセプションモジュール"></a>インセプションモジュール</h5><blockquote><p>小さなネットワークを1つのモジュールとして定義している。</p></blockquote><blockquote><p>ネットワークを分岐させ、サイズの異なる畳み込みを行う。</p></blockquote><blockquote><p>複数のフィルタ群によるブロックから構成される。</p></blockquote><h5 id="R-CNN"><a href="#R-CNN" class="headerlink" title="R-CNN"></a>R-CNN</h5><blockquote><ul><li>R-CNNは人間が行う物体認識のように、領域ごとに特徴量を抽出する。</li></ul></blockquote><blockquote><ul><li>Fast R-CNNはR-CNNに比べCNNの演算回数を削減できる可能性が高い。</li></ul></blockquote><blockquote><ul><li>Mask R-CNNのアルゴリズムを用いると、身体のポーズの検出も可能となる可能性が高い。</li></ul></blockquote><h5 id="完全結合ネットワーク-FCN"><a href="#完全結合ネットワーク-FCN" class="headerlink" title="完全結合ネットワーク(FCN)"></a>完全結合ネットワーク(FCN)</h5><blockquote><p>すべての層を畳み込み層としてネットワークを構成する。</p></blockquote><blockquote><p>セマンティック・セグメンテーションに応用されている。U-netはFCNの1つである。</p></blockquote><h5 id="モラベックのパラドックス"><a href="#モラベックのパラドックス" class="headerlink" title="モラベックのパラドックス"></a>モラベックのパラドックス</h5><blockquote><p>人間にとって簡単なことほど機械がやるのは難しいと呼ばれる。</p></blockquote><h5 id="XaaS"><a href="#XaaS" class="headerlink" title="XaaS"></a>XaaS</h5><blockquote><ul><li><strong>SaaS</strong>（Software as a Service）：サービスとしてのソフトウェア。</li></ul></blockquote><blockquote><ul><li><strong>PaaS</strong>（Platform as a Service）：サービスとしてのプラットフォーム。</li></ul></blockquote><blockquote><ul><li><strong>IaaS</strong>（Infrastructure as a Service）：サービスとしてのインフラ。</li></ul></blockquote><blockquote><ul><li><strong>MaaS</strong>（Mobility as a Service）：ICTを活用してマイカー以外の移動をシームレスにつなぐ。</li></ul></blockquote><h5 id="GDPR"><a href="#GDPR" class="headerlink" title="GDPR"></a>GDPR</h5><blockquote><p>GDPRの特色として、あるサービスが特定のユーザーに関して収集・蓄積した利用履歴などのデータを他のサービスでも再利用できること、すなわち持ち運び可能であるデータポータビリティの権利を認めている。</p></blockquote><h5 id="ベイズ推定"><a href="#ベイズ推定" class="headerlink" title="ベイズ推定"></a>ベイズ推定</h5><blockquote><p>観測事象から推定したい事柄を確率的に推論すること。</p></blockquote><h5 id="トロッコ"><a href="#トロッコ" class="headerlink" title="トロッコ"></a>トロッコ</h5><blockquote><p>自動運転などのAIに関する倫理観の議論となる問題の1つであり、別名トロリー問題ともいわれる。</p></blockquote><h5 id="エポック数"><a href="#エポック数" class="headerlink" title="エポック数"></a>エポック数</h5><blockquote><p>ディープラーニングの学習の過程において、訓練データを何回繰り返し学習させるかをエポック数で示す。</p></blockquote><h5 id="人間中心の-AI-社会原則"><a href="#人間中心の-AI-社会原則" class="headerlink" title="人間中心の AI 社会原則"></a>人間中心の AI 社会原則</h5><blockquote><ul><li>人間の尊厳が尊重される社会。</li></ul></blockquote><blockquote><ul><li>多様な背景を持つ人々が多様な幸せを追求できる社会。</li></ul></blockquote><blockquote><ul><li>持続性ある社会。</li></ul></blockquote><h5 id="Partnership-on-AI"><a href="#Partnership-on-AI" class="headerlink" title="Partnership on AI"></a>Partnership on AI</h5><blockquote><p>2016 年に、AI の研究や検証、実動におけるベストプラクティスを開発したり共有したりすることを目的とした非営利団体であるPartnership on AIがFacebook、Amazon、Alphabet（Google）、IBM、Microsoft の5 社によって創設された。</p></blockquote><h5 id="学習率"><a href="#学習率" class="headerlink" title="学習率"></a>学習率</h5><blockquote><p>学習率を大きくすると学習が早く、収束までの時間が短くなるが、発散する傾向が強くなる。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;G検定メモ&lt;/p&gt;</summary>
    
    
    
    
    <category term="G検定メモ" scheme="http://yoursite.com/tags/G%E6%A4%9C%E5%AE%9A%E3%83%A1%E3%83%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python的字符串</title>
    <link href="http://yoursite.com/2021/05/04/Python%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://yoursite.com/2021/05/04/Python%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2021-05-04T12:02:29.000Z</published>
    <updated>2021-05-04T12:33:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 Python 程序中，如果我们把单个或多个字符用单引号或者双引号包围起来，就可以表示一个字符串。</p><a id="more"></a><p>可以在字符串中使用<code>\</code>（反斜杠）来表示转义，也就是说<code>\</code>后面的字符不再是它原来的意义，例如：<code>\n</code>不是代表反斜杠和字符n，而是表示换行；而<code>\t</code>也不是代表反斜杠和字符t，而是表示制表符。所以如果想在字符串中表示<code>&#39;</code>要写成<code>\&#39;</code>，同理想表示<code>\</code>要写成<code>\\</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">'\'hello, world!\''</span></span><br><span class="line">s2 = <span class="string">'\n\\hello, world!\\\n'</span></span><br></pre></td></tr></table></figure><p>在<code>\</code>后面还可以跟一个八进制或者十六进制数来表示字符，例如<code>\141</code>和<code>\x61</code>都代表小写字母<code>a</code>，前者是八进制的表示法，后者是十六进制的表示法。也可以在<code>\</code>后面跟Unicode字符编码来表示字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">'\141\142\143\x61\x62\x63'</span></span><br><span class="line">s2 = <span class="string">'\u9a86\u660a'</span></span><br></pre></td></tr></table></figure><p>如果不希望字符串中的<code>\</code>表示转义，我们可以通过在字符串的最前面加上字母<code>r</code>来加以说明。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">r'\'hello, world!\''</span></span><br><span class="line">s2 = <span class="string">r'\n\\hello, world!\\\n'</span></span><br></pre></td></tr></table></figure><p>Python为字符串类型提供了非常丰富的运算符，我们可以使用+运算符来实现字符串的拼接，可以使用*运算符来重复一个字符串的内容，可以使用in和not in来判断一个字符串是否包含另外一个字符串（成员运算），我们也可以用[]和[:]运算符从字符串取出某个字符或某些字符（切片运算），代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">'hello '</span> * <span class="number">3</span></span><br><span class="line">print(s1) <span class="comment"># hello hello hello </span></span><br><span class="line">s2 = <span class="string">'world'</span></span><br><span class="line">s1 += s2</span><br><span class="line">print(s1) <span class="comment"># hello hello hello world</span></span><br><span class="line">print(<span class="string">'ll'</span> <span class="keyword">in</span> s1) <span class="comment"># True</span></span><br><span class="line">print(<span class="string">'good'</span> <span class="keyword">in</span> s1) <span class="comment"># False</span></span><br><span class="line">str2 = <span class="string">'abc123456'</span></span><br><span class="line"><span class="comment"># 从字符串中取出指定位置的字符(下标运算)</span></span><br><span class="line">print(str2[<span class="number">2</span>]) <span class="comment"># c</span></span><br><span class="line"><span class="comment"># 字符串切片(从指定的开始索引到指定的结束索引)</span></span><br><span class="line">print(str2[<span class="number">2</span>:<span class="number">5</span>]) <span class="comment"># c12</span></span><br><span class="line">print(str2[<span class="number">2</span>:]) <span class="comment"># c123456</span></span><br><span class="line">print(str2[<span class="number">2</span>::<span class="number">2</span>]) <span class="comment"># c246</span></span><br><span class="line">print(str2[::<span class="number">2</span>]) <span class="comment"># ac246</span></span><br><span class="line">print(str2[::<span class="number">-1</span>]) <span class="comment"># 654321cba</span></span><br><span class="line">print(str2[<span class="number">-3</span>:<span class="number">-1</span>]) <span class="comment"># 45</span></span><br></pre></td></tr></table></figure><p>在Python中，我们还可以通过一系列的方法来完成对字符串的处理，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello, world!'</span></span><br><span class="line"><span class="comment"># 通过内置函数len计算字符串的长度</span></span><br><span class="line">print(len(str1)) <span class="comment"># 13</span></span><br><span class="line"><span class="comment"># 获得字符串首字母大写的拷贝</span></span><br><span class="line">print(str1.capitalize()) <span class="comment"># Hello, world!</span></span><br><span class="line"><span class="comment"># 获得字符串每个单词首字母大写的拷贝</span></span><br><span class="line">print(str1.title()) <span class="comment"># Hello, World!</span></span><br><span class="line"><span class="comment"># 获得字符串变大写后的拷贝</span></span><br><span class="line">print(str1.upper()) <span class="comment"># HELLO, WORLD!</span></span><br><span class="line"><span class="comment"># 从字符串中查找子串所在位置</span></span><br><span class="line">print(str1.find(<span class="string">'or'</span>)) <span class="comment"># 8</span></span><br><span class="line">print(str1.find(<span class="string">'shit'</span>)) <span class="comment"># -1</span></span><br><span class="line"><span class="comment"># 与find类似但找不到子串时会引发异常</span></span><br><span class="line"><span class="comment"># print(str1.index('or'))</span></span><br><span class="line"><span class="comment"># print(str1.index('shit'))</span></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串开头</span></span><br><span class="line">print(str1.startswith(<span class="string">'He'</span>)) <span class="comment"># False</span></span><br><span class="line">print(str1.startswith(<span class="string">'hel'</span>)) <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串结尾</span></span><br><span class="line">print(str1.endswith(<span class="string">'!'</span>)) <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span></span><br><span class="line">print(str1.center(<span class="number">50</span>, <span class="string">'*'</span>))</span><br><span class="line"><span class="comment"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span></span><br><span class="line">print(str1.rjust(<span class="number">50</span>, <span class="string">' '</span>))</span><br><span class="line">str2 = <span class="string">'abc123456'</span></span><br><span class="line"><span class="comment"># 检查字符串是否由数字构成</span></span><br><span class="line">print(str2.isdigit())  <span class="comment"># False</span></span><br><span class="line"><span class="comment"># 检查字符串是否以字母构成</span></span><br><span class="line">print(str2.isalpha())  <span class="comment"># False</span></span><br><span class="line"><span class="comment"># 检查字符串是否以数字和字母构成</span></span><br><span class="line">print(str2.isalnum())  <span class="comment"># True</span></span><br><span class="line">str3 = <span class="string">'  jackfrued@126.com '</span></span><br><span class="line">print(str3)</span><br><span class="line"><span class="comment"># 获得字符串修剪左右两侧空格之后的拷贝</span></span><br><span class="line">print(str3.strip())</span><br></pre></td></tr></table></figure><p>我们之前讲过，可以用下面的方式来格式化输出字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line">print(<span class="string">'%d * %d = %d'</span> % (a, b, a * b))</span><br></pre></td></tr></table></figure><p>当然，我们也可以用字符串提供的方法来完成字符串的格式，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line">print(<span class="string">'&#123;0&#125; * &#123;1&#125; = &#123;2&#125;'</span>.format(a, b, a * b))</span><br></pre></td></tr></table></figure><p>Python 3.6以后，格式化字符串还有更为简洁的书写方式，就是在字符串前加上字母<code>f</code>，我们可以使用下面的语法糖来简化上面的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line">print(<span class="string">f'<span class="subst">&#123;a&#125;</span> * <span class="subst">&#123;b&#125;</span> = <span class="subst">&#123;a * b&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Python 程序中，如果我们把单个或多个字符用单引号或者双引号包围起来，就可以表示一个字符串。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python的装饰器</title>
    <link href="http://yoursite.com/2020/07/05/Python%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
    <id>http://yoursite.com/2020/07/05/Python%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/</id>
    <published>2020-07-05T12:42:25.000Z</published>
    <updated>2020-07-05T13:09:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>python装饰器（fuctional decorators）就是用于拓展原来函数功能的一种函数，目的是在不改变原函数名(或类名)的情况下，给函数增加新的功能。 </p><a id="more"></a><h3 id="带有固定参数的装饰器"><a href="#带有固定参数的装饰器" class="headerlink" title="带有固定参数的装饰器"></a>带有固定参数的装饰器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deco</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(a,b)</span>:</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        f(a,b)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        execution_time = (end_time - start_time)*<span class="number">1000</span></span><br><span class="line">        print(<span class="string">"time is %d ms"</span> % execution_time)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@deco</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    print(<span class="string">"be on"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"result is %d"</span> %(a+b))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="无固定参数的装饰器"><a href="#无固定参数的装饰器" class="headerlink" title="无固定参数的装饰器"></a>无固定参数的装饰器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deco</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        f(*args, **kwargs)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        execution_time_ = (end_time - start_time)*<span class="number">1000</span></span><br><span class="line">        print(<span class="string">"time is %d ms"</span> %execution_time)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@deco</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    print(<span class="string">"be on"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"result is %d"</span> %(a+b))</span><br><span class="line"></span><br><span class="line"><span class="meta">@deco</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(a,b,c)</span>:</span></span><br><span class="line">    print(<span class="string">"be on"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"result is %d"</span> %(a+b+c))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f2(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">    f(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="使用多个装饰器装饰一个函数"><a href="#使用多个装饰器装饰一个函数" class="headerlink" title="使用多个装饰器装饰一个函数"></a>使用多个装饰器装饰一个函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deco01</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">"this is deco01"</span>)</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        f(*args, **kwargs)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        execution_time = (end_time - start_time)*<span class="number">1000</span></span><br><span class="line">        print(<span class="string">"time is %d ms"</span> % execution_time)</span><br><span class="line">        print(<span class="string">"deco01 end here"</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deco02</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">"this is deco02"</span>)</span><br><span class="line">        f(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"deco02 end here"</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@deco01</span></span><br><span class="line"><span class="meta">@deco02</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    print(<span class="string">"be on"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"result is %d"</span> %(a+b))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f(<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="Python内置装饰器"><a href="#Python内置装饰器" class="headerlink" title="Python内置装饰器"></a>Python内置装饰器</h3><p>在Python中有三个内置的装饰器，都是跟class相关的：staticmethod、classmethod 和property。</p><ul><li>taticmethod 是类静态方法，其跟成员方法的区别是没有 self 参数，并且可以在类不进行实例化的情况下调用</li><li>classmethod 与成员方法的区别在于所接收的第一个参数不是 self （类实例的指针），而是cls（当前类的具体类型）</li><li>property 是属性的意思，表示可以通过通过类实例直接访问的信息</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;python装饰器（fuctional decorators）就是用于拓展原来函数功能的一种函数，目的是在不改变原函数名(或类名)的情况下，给函数增加新的功能。 &lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python3魔法方法总结</title>
    <link href="http://yoursite.com/2020/06/19/Python3%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/06/19/Python3%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2020-06-19T13:11:48.000Z</published>
    <updated>2020-07-05T13:09:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>在python中，有一些内置好的特定的方法，这些方法在进行特定的操作时会自动被调用，称之为魔法方法。</p><a id="more"></a><h2 id="构造和初始化"><a href="#构造和初始化" class="headerlink" title="构造和初始化"></a>构造和初始化</h2><p>__new__和__init__共同构成了构造函数。</p><p>__new__是用来创建类并返回这个类的实例。</p><p>__init__只是将传入的参数来初始化该实例。</p><p>__new__在创建一个实例的过程中必定会被调用，但是__init__就不一定会被调用。</p><p>在对象生命结束时，__del__会被调用，是当一个对象进行垃圾回收时的行为。</p><p>x.__del__()并不是对del x的实现，但是在执行del x时会调用x.__del__()。</p><hr><h2 id="属性访问控制"><a href="#属性访问控制" class="headerlink" title="属性访问控制"></a>属性访问控制</h2><p>__getattr__(self, name) 定义了试图访问一个不存在的属性时的行为。重载该方法可以实现捕获错误拼写然后进行重定向，或者对一些废弃的属性进行警告。</p><p>__setattr__(self, name, value) 定义了对属性进行赋值和修改操作时的行为。不管对象的某个属性是否存在，都可以为该属性进行赋值。使用时需避免无限递归错误。</p><p>__delattr__(self, name) 定义了删除属性时的行为。使用时需避免无限递归错误。</p><p>__getattribute__(self, name) 定义了属性被访问时的行为，调用__getattr__前必定会调用__getattribute__。</p><h3 id="无限递归错误"><a href="#无限递归错误" class="headerlink" title="无限递归错误"></a>无限递归错误</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, name, value)</span>:</span></span><br><span class="line">self.name = value</span><br><span class="line"><span class="comment"># 每一次属性赋值时 __setattr__ 都会被调用，因此不断调用自身导致无限递归。</span></span><br></pre></td></tr></table></figure><h3 id="属性访问控制实例"><a href="#属性访问控制实例" class="headerlink" title="属性访问控制实例"></a>属性访问控制实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Access</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    def__getattr__(self, name):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'__getattr__'</span></span><br><span class="line">        <span class="keyword">return</span> super(Access, self).__getattr__(name)</span><br><span class="line"></span><br><span class="line">    def__setattr__(self, name, value):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'__setattr__'</span></span><br><span class="line">        <span class="keyword">return</span> super(Access, self).__setattr__(name, value)</span><br><span class="line"></span><br><span class="line">    def__delattr__(self, name):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'__delattr__'</span></span><br><span class="line">        <span class="keyword">return</span> super(Access, self).__delattr__(name)</span><br><span class="line"></span><br><span class="line">    def__getattribute__(self, name):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'__getattribute__'</span></span><br><span class="line">        <span class="keyword">return</span> super(Access, self).__getattribute__(name)</span><br><span class="line"></span><br><span class="line">access = Access()</span><br><span class="line">access.attr1 = <span class="literal">True</span>  <span class="comment"># __setattr__调用</span></span><br><span class="line">access.attr1  <span class="comment"># 属性存在,只有__getattribute__调用</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    access.attr2  <span class="comment"># 属性不存在, 先调用__getattribute__, 后调用__getattr__</span></span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">del</span> access.attr1  <span class="comment"># __delattr__调用</span></span><br></pre></td></tr></table></figure><ol start="2"><li>描述器对象</li><li>构造自定义容器</li><li>上下文管理</li><li>运算符相关<ul><li>比较运算符</li><li>一元运算符和函数</li><li>算数运算符</li><li>反算数运算符</li><li>增量赋值</li><li>类型转化</li></ul></li><li>其他</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;在python中，有一些内置好的特定的方法，这些方法在进行特定的操作时会自动被调用，称之为魔法方法。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python pip使用方法</title>
    <link href="http://yoursite.com/2020/06/09/Python-pip%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/06/09/Python-pip%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2020-06-09T14:17:17.000Z</published>
    <updated>2020-06-10T13:28:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。</p><a id="more"></a><hr><h2 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h2><p>通过以下命令来判断是否已安装：</p><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><p>如果未安装，则可以使用以下方法来安装：</p><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py   <span class="comment"># 下载安装脚本</span></span><br><span class="line">$ sudo python get-pip.py    <span class="comment"># 运行安装脚本</span></span><br></pre></td></tr></table></figure><h2 id="pip常用命令"><a href="#pip常用命令" class="headerlink" title="pip常用命令"></a>pip常用命令</h2><ul><li>显示版本和路径</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><ul><li>获取帮助</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --help</span><br></pre></td></tr></table></figure><ul><li>升级 pip</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U pip</span><br></pre></td></tr></table></figure><ul><li>安装包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install SomePackage              <span class="comment"># 最新版本</span></span><br><span class="line">pip install SomePackage==<span class="number">1.0</span><span class="number">.4</span>       <span class="comment"># 指定版本</span></span><br><span class="line">pip install <span class="string">'SomePackage&gt;=1.0.4'</span>     <span class="comment"># 最小版本</span></span><br></pre></td></tr></table></figure><ul><li>升级包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade SomePackage</span><br></pre></td></tr></table></figure><ul><li>卸载包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall SomePackage</span><br></pre></td></tr></table></figure><ul><li>搜索包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip search SomePackage</span><br></pre></td></tr></table></figure><ul><li>显示安装包信息</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show</span><br></pre></td></tr></table></figure><ul><li>查看指定包的详细信息</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip show -f SomePackage</span><br></pre></td></tr></table></figure><ul><li>列出已安装的包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><ul><li>查看可升级的包</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list -o</span><br></pre></td></tr></table></figure><ul><li>生成<code>requirements.txt</code>文件</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><ul><li>安装<code>requirements.txt</code>依赖</li></ul><figure class="highlight python"><figcaption><span>pip</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Markdown高级技巧</title>
    <link href="http://yoursite.com/2020/06/06/Markdown%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2020/06/06/Markdown%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/</id>
    <published>2020-06-06T14:15:08.000Z</published>
    <updated>2020-06-06T14:43:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>总结HTML元素使用，转义，公式，以及使用Typora画流程图，时序图，甘特图的用法。</p><a id="more"></a><hr><h2 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h2><p>不在Markdown涵盖范围之内的标签，都可以直接在文档里面用HTML撰写。</p><p>目前支持的HTML元素有：<code>&lt;kdb&gt;,&lt;b&gt;,&lt;i&gt;,&lt;em&gt;,&lt;sup&gt;,&lt;sub&gt;,&lt;br&gt;</code>等</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></table></figure><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\<span class="emphasis">*\*</span> 正常显示星号 \<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p>Markdown支持以下这些符号前面加反斜线来插入普通符号。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+   </span>加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><hr><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>可以使用两个美元符号<code>$$</code>包裹<code>TeX</code>或<code>LaTeX</code>格式的数学公式来实现。提交后Mathjax会进行渲染。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p><hr><h2 id="流程图，时序图，甘特图"><a href="#流程图，时序图，甘特图" class="headerlink" title="流程图，时序图，甘特图"></a>流程图，时序图，甘特图</h2><ul><li>横向流程图</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line"><span class="code">    B --&gt; C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">    C --&gt;|a=1| D[结果1]</span></span><br><span class="line"><span class="code">    C --&gt;|a=2| E[结果2]</span></span><br><span class="line"><span class="code">    F[横向流程图]</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure><ul><li>竖向流程图</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line"><span class="code">    B --&gt; C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">    C --&gt; |a=1| D[结果1]</span></span><br><span class="line"><span class="code">    C --&gt; |a=2| E[结果2]</span></span><br><span class="line"><span class="code">    F[竖向流程图]</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure><ul><li>标准流程图</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>flow</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><ul><li>标准流程图（横向）</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>flow</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><ul><li>时序图1</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>sequence</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;sequence</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure><ul><li>时序图2</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>sequence</span><br><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;对象C: 你好吗</span><br><span class="line">对象C--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 对象C,对象B: 我们是朋友</span><br><span class="line">participant 对象D</span><br><span class="line">Note right of 对象D: 没人陪我玩</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;sequence</span><br><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;对象C: 你好吗</span><br><span class="line">对象C--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 对象C,对象B: 我们是朋友</span><br><span class="line">participant 对象D</span><br><span class="line">Note right of 对象D: 没人陪我玩</span><br></pre></td></tr></table></figure><ul><li>时序图3</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><ul><li>甘特图</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>mermaid</span><br><span class="line">%% 语法示例</span><br><span class="line"><span class="code">        gantt</span></span><br><span class="line"><span class="code">        dateFormat  YYYY-MM-DD</span></span><br><span class="line"><span class="code">        title 软件开发甘特图</span></span><br><span class="line"><span class="code">        section 设计</span></span><br><span class="line"><span class="code">        需求                      :done,    des1, 2014-01-06,2014-01-08</span></span><br><span class="line"><span class="code">        原型                      :active,  des2, 2014-01-09, 3d</span></span><br><span class="line"><span class="code">        UI设计                     :         des3, after des2, 5d</span></span><br><span class="line"><span class="code">    未来任务                     :         des4, after des3, 5d</span></span><br><span class="line"><span class="code">        section 开发</span></span><br><span class="line"><span class="code">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span></span><br><span class="line"><span class="code">        设计框架                             :crit, done, after des2, 2d</span></span><br><span class="line"><span class="code">        开发                                 :crit, active, 3d</span></span><br><span class="line"><span class="code">        未来任务                              :crit, 5d</span></span><br><span class="line"><span class="code">        耍                                   :2d</span></span><br><span class="line"><span class="code">        section 测试</span></span><br><span class="line"><span class="code">        功能测试                              :active, a1, after des3, 3d</span></span><br><span class="line"><span class="code">        压力测试                               :after a1  , 20h</span></span><br><span class="line"><span class="code">        测试报告                               : 48h</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;总结HTML元素使用，转义，公式，以及使用Typora画流程图，时序图，甘特图的用法。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基础语法</title>
    <link href="http://yoursite.com/2020/06/05/Markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2020/06/05/Markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2020-06-05T14:29:23.000Z</published>
    <updated>2020-06-06T14:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><a id="more"></a><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ul><li>使用<code>=</code>和<code>-</code>标记一级和二级标题。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我是一级标题</span><br><span class="line">=========</span><br><span class="line"></span><br><span class="line">我是二级标题</span><br><span class="line">----------</span><br></pre></td></tr></table></figure><ul><li>使用<code>#</code>号标记</li></ul><p>使用#号可表示1-6级标题，一级标题对应一个<code>#</code>号，二级标题对应两个<code>#</code>号，以此类推。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 我是一级标题</span></span><br><span class="line"><span class="section">## 我是二级标题</span></span><br><span class="line"><span class="section">### 我是三级标题</span></span><br><span class="line"><span class="section">#### 我是四级标题</span></span><br><span class="line"><span class="section">##### 我是五级标题</span></span><br><span class="line"><span class="section">###### 我是六级标题</span></span><br></pre></td></tr></table></figure><hr><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>Markdown段落没有特殊的格式，直接编写文字就好。</p><ul><li>字体</li></ul><p>Markdown可以使用以下几种字体。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="emphasis">_斜体文本_</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">__粗体文本__</span></span><br><span class="line"><span class="strong">***粗斜体文本**</span>*</span><br><span class="line"><span class="strong">___粗斜体文本__</span>_</span><br></pre></td></tr></table></figure><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p><ul><li>分割线</li></ul><p>可以在一行中用三个以上的星号，减号，底线来建立一个分隔线，行内不能有其他东西。也可在星号或减号中间插入空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span></span><br><span class="line"><span class="strong">*****</span></span><br><span class="line"><span class="bullet">- </span>- -</span><br><span class="line">-----</span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><ul><li>删除线</li></ul><p>段落上的文字两端加上两个波浪线<code>~~</code>可以添加删除线。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除文本~~</span><br></pre></td></tr></table></figure><p><del>删除文本</del></p><ul><li>下划线</li></ul><p>下划线可通过HTML的<code>&lt;u&gt;</code>标签来实现。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>带下划线的文本<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><u>带下划线的文本</u></p><ul><li>脚注</li></ul><p>Markdown脚注的格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建脚注文本[^TEST]</span><br><span class="line">[<span class="symbol">^TEST</span>]: <span class="link">显示脚注文本</span></span><br></pre></td></tr></table></figure><p>创建脚注文本[^TEST]<br>[^TEST]: 显示脚注文本</p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown支持无序列表和有序列表。</p><ul><li>无序列表</li></ul><p>无序列表使用星号<code>*</code>，加号<code>+</code>或是减号<code>-</code>作为列表标记。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>第一项</span><br><span class="line"><span class="bullet">* </span>第二项</span><br><span class="line"><span class="bullet">* </span>第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>第一项</span><br><span class="line"><span class="bullet">+ </span>第二项</span><br><span class="line"><span class="bullet">+ </span>第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>第一项</span><br><span class="line"><span class="bullet">- </span>第二项</span><br><span class="line"><span class="bullet">- </span>第三项</span><br></pre></td></tr></table></figure><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>有序列表</li></ul><p>有序列表使用数字加<code>.</code>号来表示</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一项</span><br><span class="line"><span class="bullet">2. </span>第二项</span><br><span class="line"><span class="bullet">3. </span>第三项</span><br></pre></td></tr></table></figure><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><ul><li>列表嵌套</li></ul><p>列表嵌套只需要在子列表中的选项添加四个空格即可。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一项</span><br><span class="line"><span class="bullet">    - </span>第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    - </span>第二项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2. </span>第二项</span><br><span class="line"><span class="bullet">    - </span>第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    - </span>第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><ol><li>第一项<ul><li>第一项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li><li>第二项<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><hr><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><p>区块引用是在段落开头使用<code>&gt;</code>符号，然后后面紧跟一个空格符号。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 区块引用1</span></span><br><span class="line"><span class="quote">&gt; 区块引用2</span></span><br><span class="line"><span class="quote">&gt; 区块引用3</span></span><br></pre></td></tr></table></figure><blockquote><p>区块引用1<br>区块引用2<br>区块引用3</p></blockquote><ul><li>区块嵌套</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层</span></span><br><span class="line"><span class="quote">&gt; &gt; 中间层</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 最里层</span></span><br></pre></td></tr></table></figure><blockquote><p>最外层</p><blockquote><p>中间层</p><blockquote><p>最里层</p></blockquote></blockquote></blockquote><ul><li>区块中使用列表</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br></pre></td></tr></table></figure><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li></ul></blockquote><ul><li>列表中使用区块</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>第一项</span><br><span class="line"><span class="code">    &gt; 第一区块</span></span><br><span class="line"><span class="code">    &gt; 第二区块</span></span><br><span class="line"><span class="bullet">* </span>第二项</span><br></pre></td></tr></table></figure><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>如果是段落上的一个函数或片段的代码可以用反引号把它包起来。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`print()`</span>函数</span><br></pre></td></tr></table></figure><p><code>print()</code>函数</p><ul><li>代码区块</li></ul><p>使用四个空格或一个制表符。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?php</span></span></span></span><br><span class="line"><span class="xml">echo 'CODE';</span></span><br><span class="line"><span class="xml">function test()&#123;</span></span><br><span class="line"><span class="xml">echo 'test';</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><pre><code>&lt;?phpecho &apos;CODE&apos;;function test(){    echo &apos;test&apos;;}</code></pre><ul><li>也可使用```包裹一段代码，并指定一种语言。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```</span>javascript</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line"><span class="code">alert('TEST');</span></span><br><span class="line">&#125;);</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">alert(&#39;TEST&#39;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><ul><li>连接名称+连接</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">名称</span>](<span class="link">https://www.google.com</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.google.com" target="_blank" rel="noopener">名称</a></p><ul><li>连接</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.google.com</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a></p><ul><li>变量设置连接</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这个连接用变量1作为网址连接 [<span class="string">google</span>][<span class="symbol">1</span>]</span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">https//www.google.com</span></span><br></pre></td></tr></table></figure><p>这个连接用变量1作为网址连接 <a href="https//www.google.com">google</a></p><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li>markdown语法添加图片</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt markdown图标</span>](<span class="link">https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1591452988248&amp;di=ed51be8b89ff03fd08bbdb4544031cec&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png</span>)</span><br></pre></td></tr></table></figure><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1591452988248&di=ed51be8b89ff03fd08bbdb4544031cec&imgtype=0&src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png" alt="alt markdown图标"></p><ul><li>使用<code>&lt;img&gt;</code>标签设置图片高度和宽度。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1591452988248&amp;di=ed51be8b89ff03fd08bbdb4544031cec&amp;imgtype=0&amp;src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png"</span> <span class="attr">width</span>=<span class="string">"50%"</span>&gt;</span></span></span><br></pre></td></tr></table></figure><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1591452988248&di=ed51be8b89ff03fd08bbdb4544031cec&imgtype=0&src=http%3A%2F%2Fpngimg.com%2Fuploads%2Fpokemon%2Fpokemon_PNG148.png" width="50%"><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>制作表格使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头 | 表头 |</span><br><span class="line">| ---- | ----|</span><br><span class="line">| 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>对其方式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中 |</span><br><span class="line">| :---- | ----: | :----:|</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
</feed>
